Terminals unused in grammar

   EOL


Grammar

    0 $accept: classBegin $end

    1 classBegin: CLASS PROGRAM '{' '}'
    2           | CLASS PROGRAM '{' fieldDec methodDec '}'
    3           | CLASS PROGRAM '{' methodDec '}'
    4           | CLASS PROGRAM '{' fieldDec '}'

    5 fieldDec: type fieldArgs ';'
    6         | fieldDec type fieldArgs ';'

    7 fieldArgs: ID
    8          | ID ',' fieldArgs
    9          | ID '[' intlit ']'
   10          | ID '[' intlit ']' ',' fieldArgs

   11 methodDecList: type ID '(' methodArgs ')' block
   12              | type ID '(' ')' block
   13              | VOID ID '(' methodArgs ')' block
   14              | VOID ID '(' ')' block

   15 methodDec: methodDecList
   16          | methodDec methodDecList

   17 methodArgs: type ID
   18           | type ID ',' methodArgs

   19 block: '{' '}'
   20      | '{' varDecl '}'
   21      | '{' statement '}'
   22      | '{' varDecl statement '}'

   23 varDecl: type vars ';' varDecl
   24        | type vars ';'

   25 vars: vars ',' ID
   26     | ID

   27 statementContents: location '=' expr ';'
   28                  | location PLUSEQ expr ';'
   29                  | location MINUSEQ expr ';'
   30                  | methodcall ';'
   31                  | IF '(' expr ')' block
   32                  | IF '(' expr ')' block ELSE block
   33                  | FOR ID '=' expr ',' expr block
   34                  | RETURN ';'
   35                  | RETURN expr ';'
   36                  | BREAK ';'
   37                  | CONTINUE ';'
   38                  | block

   39 statement: statementContents
   40          | statement statementContents

   41 type: INT
   42     | BOOLEAN

   43 expr: location
   44     | methodcall
   45     | literal
   46     | '-' expr
   47     | '!' expr
   48     | expr '*' expr
   49     | expr '/' expr
   50     | expr '%' expr
   51     | expr '+' expr
   52     | expr '-' expr
   53     | expr '<' expr
   54     | expr '>' expr
   55     | expr LE expr
   56     | expr GE expr
   57     | expr EE expr
   58     | expr NE expr
   59     | expr AND expr
   60     | expr OR expr
   61     | '(' expr ')'

   62 location: ID
   63         | ID '[' expr ']'

   64 methodname: ID

   65 methodcall: methodname '(' ')'
   66           | methodname '(' arguments ')'
   67           | CALLOUT '(' stringLiteral ')'
   68           | CALLOUT '(' stringLiteral ',' calloutArgsList ')'

   69 calloutArgsList: expr
   70                | stringLiteral
   71                | expr ',' calloutArgsList
   72                | stringLiteral ',' calloutArgsList

   73 stringLiteral: STRINGLIT

   74 arguments: expr
   75          | expr ',' arguments

   76 literal: intlit
   77        | boollit

   78 intlit: DECLIT
   79       | HEXLIT

   80 boollit: TRUE
   81        | FALSE


Terminals, with rules where they appear

$end (0) 0
'!' (33) 47
'%' (37) 50
'(' (40) 11 12 13 14 31 32 61 65 66 67 68
')' (41) 11 12 13 14 31 32 61 65 66 67 68
'*' (42) 48
'+' (43) 51
',' (44) 8 10 18 25 33 68 71 72 75
'-' (45) 46 52
'/' (47) 49
';' (59) 5 6 23 24 27 28 29 30 34 35 36 37
'<' (60) 53
'=' (61) 27 33
'>' (62) 54
'[' (91) 9 10 63
']' (93) 9 10 63
'{' (123) 1 2 3 4 19 20 21 22
'}' (125) 1 2 3 4 19 20 21 22
error (256)
BOOLEAN (258) 42
BREAK (259) 36
CALLOUT (260) 67 68
CLASS (261) 1 2 3 4
CONTINUE (262) 37
ELSE (263) 32
FALSE (264) 81
FOR (265) 33
INT (266) 41
IF (267) 31 32
RETURN (268) 34 35
TRUE (269) 80
VOID (270) 13 14
EOL (271)
PROGRAM (272) 1 2 3 4
PLUSEQ (273) 28
MINUSEQ (274) 29
AND (275) 59
OR (276) 60
EE (277) 57
NE (278) 58
LE (279) 55
GE (280) 56
STRINGLIT (281) 73
DECLIT (282) 78
HEXLIT (283) 79
ID (284) 7 8 9 10 11 12 13 14 17 18 25 26 33 62 63 64


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
classBegin (48)
    on left: 1 2 3 4, on right: 0
fieldDec (49)
    on left: 5 6, on right: 2 4 6
fieldArgs (50)
    on left: 7 8 9 10, on right: 5 6 8 10
methodDecList (51)
    on left: 11 12 13 14, on right: 15 16
methodDec (52)
    on left: 15 16, on right: 2 3 16
methodArgs (53)
    on left: 17 18, on right: 11 13 18
block (54)
    on left: 19 20 21 22, on right: 11 12 13 14 31 32 33 38
varDecl (55)
    on left: 23 24, on right: 20 22 23
vars (56)
    on left: 25 26, on right: 23 24 25
statementContents (57)
    on left: 27 28 29 30 31 32 33 34 35 36 37 38, on right: 39 40
statement (58)
    on left: 39 40, on right: 21 22 40
type (59)
    on left: 41 42, on right: 5 6 11 12 17 18 23 24
expr (60)
    on left: 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
    61, on right: 27 28 29 31 32 33 35 46 47 48 49 50 51 52 53 54 55
    56 57 58 59 60 61 63 69 71 74 75
location (61)
    on left: 62 63, on right: 27 28 29 43
methodname (62)
    on left: 64, on right: 65 66
methodcall (63)
    on left: 65 66 67 68, on right: 30 44
calloutArgsList (64)
    on left: 69 70 71 72, on right: 68 71 72
stringLiteral (65)
    on left: 73, on right: 67 68 70 72
arguments (66)
    on left: 74 75, on right: 66 75
literal (67)
    on left: 76 77, on right: 45
intlit (68)
    on left: 78 79, on right: 9 10 76
boollit (69)
    on left: 80 81, on right: 77


State 0

    0 $accept: . classBegin $end
    1 classBegin: . CLASS PROGRAM '{' '}'
    2           | . CLASS PROGRAM '{' fieldDec methodDec '}'
    3           | . CLASS PROGRAM '{' methodDec '}'
    4           | . CLASS PROGRAM '{' fieldDec '}'

    CLASS  shift, and go to state 1

    classBegin  go to state 2


State 1

    1 classBegin: CLASS . PROGRAM '{' '}'
    2           | CLASS . PROGRAM '{' fieldDec methodDec '}'
    3           | CLASS . PROGRAM '{' methodDec '}'
    4           | CLASS . PROGRAM '{' fieldDec '}'

    PROGRAM  shift, and go to state 3


State 2

    0 $accept: classBegin . $end

    $end  shift, and go to state 4


State 3

    1 classBegin: CLASS PROGRAM . '{' '}'
    2           | CLASS PROGRAM . '{' fieldDec methodDec '}'
    3           | CLASS PROGRAM . '{' methodDec '}'
    4           | CLASS PROGRAM . '{' fieldDec '}'

    '{'  shift, and go to state 5


State 4

    0 $accept: classBegin $end .

    $default  accept


State 5

    1 classBegin: CLASS PROGRAM '{' . '}'
    2           | CLASS PROGRAM '{' . fieldDec methodDec '}'
    3           | CLASS PROGRAM '{' . methodDec '}'
    4           | CLASS PROGRAM '{' . fieldDec '}'
    5 fieldDec: . type fieldArgs ';'
    6         | . fieldDec type fieldArgs ';'
   11 methodDecList: . type ID '(' methodArgs ')' block
   12              | . type ID '(' ')' block
   13              | . VOID ID '(' methodArgs ')' block
   14              | . VOID ID '(' ')' block
   15 methodDec: . methodDecList
   16          | . methodDec methodDecList
   41 type: . INT
   42     | . BOOLEAN

    BOOLEAN  shift, and go to state 6
    INT      shift, and go to state 7
    VOID     shift, and go to state 8
    '}'      shift, and go to state 9

    fieldDec       go to state 10
    methodDecList  go to state 11
    methodDec      go to state 12
    type           go to state 13


State 6

   42 type: BOOLEAN .

    $default  reduce using rule 42 (type)


State 7

   41 type: INT .

    $default  reduce using rule 41 (type)


State 8

   13 methodDecList: VOID . ID '(' methodArgs ')' block
   14              | VOID . ID '(' ')' block

    ID  shift, and go to state 14


State 9

    1 classBegin: CLASS PROGRAM '{' '}' .

    $default  reduce using rule 1 (classBegin)


State 10

    2 classBegin: CLASS PROGRAM '{' fieldDec . methodDec '}'
    4           | CLASS PROGRAM '{' fieldDec . '}'
    6 fieldDec: fieldDec . type fieldArgs ';'
   11 methodDecList: . type ID '(' methodArgs ')' block
   12              | . type ID '(' ')' block
   13              | . VOID ID '(' methodArgs ')' block
   14              | . VOID ID '(' ')' block
   15 methodDec: . methodDecList
   16          | . methodDec methodDecList
   41 type: . INT
   42     | . BOOLEAN

    BOOLEAN  shift, and go to state 6
    INT      shift, and go to state 7
    VOID     shift, and go to state 8
    '}'      shift, and go to state 15

    methodDecList  go to state 11
    methodDec      go to state 16
    type           go to state 17


State 11

   15 methodDec: methodDecList .

    $default  reduce using rule 15 (methodDec)


State 12

    3 classBegin: CLASS PROGRAM '{' methodDec . '}'
   11 methodDecList: . type ID '(' methodArgs ')' block
   12              | . type ID '(' ')' block
   13              | . VOID ID '(' methodArgs ')' block
   14              | . VOID ID '(' ')' block
   16 methodDec: methodDec . methodDecList
   41 type: . INT
   42     | . BOOLEAN

    BOOLEAN  shift, and go to state 6
    INT      shift, and go to state 7
    VOID     shift, and go to state 8
    '}'      shift, and go to state 18

    methodDecList  go to state 19
    type           go to state 20


State 13

    5 fieldDec: type . fieldArgs ';'
    7 fieldArgs: . ID
    8          | . ID ',' fieldArgs
    9          | . ID '[' intlit ']'
   10          | . ID '[' intlit ']' ',' fieldArgs
   11 methodDecList: type . ID '(' methodArgs ')' block
   12              | type . ID '(' ')' block

    ID  shift, and go to state 21

    fieldArgs  go to state 22


State 14

   13 methodDecList: VOID ID . '(' methodArgs ')' block
   14              | VOID ID . '(' ')' block

    '('  shift, and go to state 23


State 15

    4 classBegin: CLASS PROGRAM '{' fieldDec '}' .

    $default  reduce using rule 4 (classBegin)


State 16

    2 classBegin: CLASS PROGRAM '{' fieldDec methodDec . '}'
   11 methodDecList: . type ID '(' methodArgs ')' block
   12              | . type ID '(' ')' block
   13              | . VOID ID '(' methodArgs ')' block
   14              | . VOID ID '(' ')' block
   16 methodDec: methodDec . methodDecList
   41 type: . INT
   42     | . BOOLEAN

    BOOLEAN  shift, and go to state 6
    INT      shift, and go to state 7
    VOID     shift, and go to state 8
    '}'      shift, and go to state 24

    methodDecList  go to state 19
    type           go to state 20


State 17

    6 fieldDec: fieldDec type . fieldArgs ';'
    7 fieldArgs: . ID
    8          | . ID ',' fieldArgs
    9          | . ID '[' intlit ']'
   10          | . ID '[' intlit ']' ',' fieldArgs
   11 methodDecList: type . ID '(' methodArgs ')' block
   12              | type . ID '(' ')' block

    ID  shift, and go to state 21

    fieldArgs  go to state 25


State 18

    3 classBegin: CLASS PROGRAM '{' methodDec '}' .

    $default  reduce using rule 3 (classBegin)


State 19

   16 methodDec: methodDec methodDecList .

    $default  reduce using rule 16 (methodDec)


State 20

   11 methodDecList: type . ID '(' methodArgs ')' block
   12              | type . ID '(' ')' block

    ID  shift, and go to state 26


State 21

    7 fieldArgs: ID .  [';']
    8          | ID . ',' fieldArgs
    9          | ID . '[' intlit ']'
   10          | ID . '[' intlit ']' ',' fieldArgs
   11 methodDecList: type ID . '(' methodArgs ')' block
   12              | type ID . '(' ')' block

    '('  shift, and go to state 27
    '['  shift, and go to state 28
    ','  shift, and go to state 29

    $default  reduce using rule 7 (fieldArgs)


State 22

    5 fieldDec: type fieldArgs . ';'

    ';'  shift, and go to state 30


State 23

   13 methodDecList: VOID ID '(' . methodArgs ')' block
   14              | VOID ID '(' . ')' block
   17 methodArgs: . type ID
   18           | . type ID ',' methodArgs
   41 type: . INT
   42     | . BOOLEAN

    BOOLEAN  shift, and go to state 6
    INT      shift, and go to state 7
    ')'      shift, and go to state 31

    methodArgs  go to state 32
    type        go to state 33


State 24

    2 classBegin: CLASS PROGRAM '{' fieldDec methodDec '}' .

    $default  reduce using rule 2 (classBegin)


State 25

    6 fieldDec: fieldDec type fieldArgs . ';'

    ';'  shift, and go to state 34


State 26

   11 methodDecList: type ID . '(' methodArgs ')' block
   12              | type ID . '(' ')' block

    '('  shift, and go to state 27


State 27

   11 methodDecList: type ID '(' . methodArgs ')' block
   12              | type ID '(' . ')' block
   17 methodArgs: . type ID
   18           | . type ID ',' methodArgs
   41 type: . INT
   42     | . BOOLEAN

    BOOLEAN  shift, and go to state 6
    INT      shift, and go to state 7
    ')'      shift, and go to state 35

    methodArgs  go to state 36
    type        go to state 33


State 28

    9 fieldArgs: ID '[' . intlit ']'
   10          | ID '[' . intlit ']' ',' fieldArgs
   78 intlit: . DECLIT
   79       | . HEXLIT

    DECLIT  shift, and go to state 37
    HEXLIT  shift, and go to state 38

    intlit  go to state 39


State 29

    7 fieldArgs: . ID
    8          | . ID ',' fieldArgs
    8          | ID ',' . fieldArgs
    9          | . ID '[' intlit ']'
   10          | . ID '[' intlit ']' ',' fieldArgs

    ID  shift, and go to state 40

    fieldArgs  go to state 41


State 30

    5 fieldDec: type fieldArgs ';' .

    $default  reduce using rule 5 (fieldDec)


State 31

   14 methodDecList: VOID ID '(' ')' . block
   19 block: . '{' '}'
   20      | . '{' varDecl '}'
   21      | . '{' statement '}'
   22      | . '{' varDecl statement '}'

    '{'  shift, and go to state 42

    block  go to state 43


State 32

   13 methodDecList: VOID ID '(' methodArgs . ')' block

    ')'  shift, and go to state 44


State 33

   17 methodArgs: type . ID
   18           | type . ID ',' methodArgs

    ID  shift, and go to state 45


State 34

    6 fieldDec: fieldDec type fieldArgs ';' .

    $default  reduce using rule 6 (fieldDec)


State 35

   12 methodDecList: type ID '(' ')' . block
   19 block: . '{' '}'
   20      | . '{' varDecl '}'
   21      | . '{' statement '}'
   22      | . '{' varDecl statement '}'

    '{'  shift, and go to state 42

    block  go to state 46


State 36

   11 methodDecList: type ID '(' methodArgs . ')' block

    ')'  shift, and go to state 47


State 37

   78 intlit: DECLIT .

    $default  reduce using rule 78 (intlit)


State 38

   79 intlit: HEXLIT .

    $default  reduce using rule 79 (intlit)


State 39

    9 fieldArgs: ID '[' intlit . ']'
   10          | ID '[' intlit . ']' ',' fieldArgs

    ']'  shift, and go to state 48


State 40

    7 fieldArgs: ID .  [';']
    8          | ID . ',' fieldArgs
    9          | ID . '[' intlit ']'
   10          | ID . '[' intlit ']' ',' fieldArgs

    '['  shift, and go to state 28
    ','  shift, and go to state 29

    $default  reduce using rule 7 (fieldArgs)


State 41

    8 fieldArgs: ID ',' fieldArgs .

    $default  reduce using rule 8 (fieldArgs)


State 42

   19 block: . '{' '}'
   19      | '{' . '}'
   20      | . '{' varDecl '}'
   20      | '{' . varDecl '}'
   21      | . '{' statement '}'
   21      | '{' . statement '}'
   22      | . '{' varDecl statement '}'
   22      | '{' . varDecl statement '}'
   23 varDecl: . type vars ';' varDecl
   24        | . type vars ';'
   27 statementContents: . location '=' expr ';'
   28                  | . location PLUSEQ expr ';'
   29                  | . location MINUSEQ expr ';'
   30                  | . methodcall ';'
   31                  | . IF '(' expr ')' block
   32                  | . IF '(' expr ')' block ELSE block
   33                  | . FOR ID '=' expr ',' expr block
   34                  | . RETURN ';'
   35                  | . RETURN expr ';'
   36                  | . BREAK ';'
   37                  | . CONTINUE ';'
   38                  | . block
   39 statement: . statementContents
   40          | . statement statementContents
   41 type: . INT
   42     | . BOOLEAN
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 49
    CALLOUT   shift, and go to state 50
    CONTINUE  shift, and go to state 51
    FOR       shift, and go to state 52
    INT       shift, and go to state 7
    IF        shift, and go to state 53
    RETURN    shift, and go to state 54
    ID        shift, and go to state 55
    '{'       shift, and go to state 42
    '}'       shift, and go to state 56

    block              go to state 57
    varDecl            go to state 58
    statementContents  go to state 59
    statement          go to state 60
    type               go to state 61
    location           go to state 62
    methodname         go to state 63
    methodcall         go to state 64


State 43

   14 methodDecList: VOID ID '(' ')' block .

    $default  reduce using rule 14 (methodDecList)


State 44

   13 methodDecList: VOID ID '(' methodArgs ')' . block
   19 block: . '{' '}'
   20      | . '{' varDecl '}'
   21      | . '{' statement '}'
   22      | . '{' varDecl statement '}'

    '{'  shift, and go to state 42

    block  go to state 65


State 45

   17 methodArgs: type ID .  [')']
   18           | type ID . ',' methodArgs

    ','  shift, and go to state 66

    $default  reduce using rule 17 (methodArgs)


State 46

   12 methodDecList: type ID '(' ')' block .

    $default  reduce using rule 12 (methodDecList)


State 47

   11 methodDecList: type ID '(' methodArgs ')' . block
   19 block: . '{' '}'
   20      | . '{' varDecl '}'
   21      | . '{' statement '}'
   22      | . '{' varDecl statement '}'

    '{'  shift, and go to state 42

    block  go to state 67


State 48

    9 fieldArgs: ID '[' intlit ']' .  [';']
   10          | ID '[' intlit ']' . ',' fieldArgs

    ','  shift, and go to state 68

    $default  reduce using rule 9 (fieldArgs)


State 49

   36 statementContents: BREAK . ';'

    ';'  shift, and go to state 69


State 50

   67 methodcall: CALLOUT . '(' stringLiteral ')'
   68           | CALLOUT . '(' stringLiteral ',' calloutArgsList ')'

    '('  shift, and go to state 70


State 51

   37 statementContents: CONTINUE . ';'

    ';'  shift, and go to state 71


State 52

   33 statementContents: FOR . ID '=' expr ',' expr block

    ID  shift, and go to state 72


State 53

   31 statementContents: IF . '(' expr ')' block
   32                  | IF . '(' expr ')' block ELSE block

    '('  shift, and go to state 73


State 54

   34 statementContents: RETURN . ';'
   35                  | RETURN . expr ';'
   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78
    ';'      shift, and go to state 79

    expr        go to state 80
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 55

   62 location: ID .  ['=', PLUSEQ, MINUSEQ, AND, OR, EE, NE, '<', '>', LE, GE, '+', '-', '*', '/', '%', ')', ']', '{', ',', ';']
   63         | ID . '[' expr ']'
   64 methodname: ID .  ['(']

    '['  shift, and go to state 86

    '('       reduce using rule 64 (methodname)
    $default  reduce using rule 62 (location)


State 56

   19 block: '{' '}' .

    $default  reduce using rule 19 (block)


State 57

   38 statementContents: block .

    $default  reduce using rule 38 (statementContents)


State 58

   19 block: . '{' '}'
   20      | . '{' varDecl '}'
   20      | '{' varDecl . '}'
   21      | . '{' statement '}'
   22      | . '{' varDecl statement '}'
   22      | '{' varDecl . statement '}'
   27 statementContents: . location '=' expr ';'
   28                  | . location PLUSEQ expr ';'
   29                  | . location MINUSEQ expr ';'
   30                  | . methodcall ';'
   31                  | . IF '(' expr ')' block
   32                  | . IF '(' expr ')' block ELSE block
   33                  | . FOR ID '=' expr ',' expr block
   34                  | . RETURN ';'
   35                  | . RETURN expr ';'
   36                  | . BREAK ';'
   37                  | . CONTINUE ';'
   38                  | . block
   39 statement: . statementContents
   40          | . statement statementContents
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'

    BREAK     shift, and go to state 49
    CALLOUT   shift, and go to state 50
    CONTINUE  shift, and go to state 51
    FOR       shift, and go to state 52
    IF        shift, and go to state 53
    RETURN    shift, and go to state 54
    ID        shift, and go to state 55
    '{'       shift, and go to state 42
    '}'       shift, and go to state 87

    block              go to state 57
    statementContents  go to state 59
    statement          go to state 88
    location           go to state 62
    methodname         go to state 63
    methodcall         go to state 64


State 59

   39 statement: statementContents .

    $default  reduce using rule 39 (statement)


State 60

   19 block: . '{' '}'
   20      | . '{' varDecl '}'
   21      | . '{' statement '}'
   21      | '{' statement . '}'
   22      | . '{' varDecl statement '}'
   27 statementContents: . location '=' expr ';'
   28                  | . location PLUSEQ expr ';'
   29                  | . location MINUSEQ expr ';'
   30                  | . methodcall ';'
   31                  | . IF '(' expr ')' block
   32                  | . IF '(' expr ')' block ELSE block
   33                  | . FOR ID '=' expr ',' expr block
   34                  | . RETURN ';'
   35                  | . RETURN expr ';'
   36                  | . BREAK ';'
   37                  | . CONTINUE ';'
   38                  | . block
   40 statement: statement . statementContents
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'

    BREAK     shift, and go to state 49
    CALLOUT   shift, and go to state 50
    CONTINUE  shift, and go to state 51
    FOR       shift, and go to state 52
    IF        shift, and go to state 53
    RETURN    shift, and go to state 54
    ID        shift, and go to state 55
    '{'       shift, and go to state 42
    '}'       shift, and go to state 89

    block              go to state 57
    statementContents  go to state 90
    location           go to state 62
    methodname         go to state 63
    methodcall         go to state 64


State 61

   23 varDecl: type . vars ';' varDecl
   24        | type . vars ';'
   25 vars: . vars ',' ID
   26     | . ID

    ID  shift, and go to state 91

    vars  go to state 92


State 62

   27 statementContents: location . '=' expr ';'
   28                  | location . PLUSEQ expr ';'
   29                  | location . MINUSEQ expr ';'

    '='      shift, and go to state 93
    PLUSEQ   shift, and go to state 94
    MINUSEQ  shift, and go to state 95


State 63

   65 methodcall: methodname . '(' ')'
   66           | methodname . '(' arguments ')'

    '('  shift, and go to state 96


State 64

   30 statementContents: methodcall . ';'

    ';'  shift, and go to state 97


State 65

   13 methodDecList: VOID ID '(' methodArgs ')' block .

    $default  reduce using rule 13 (methodDecList)


State 66

   17 methodArgs: . type ID
   18           | . type ID ',' methodArgs
   18           | type ID ',' . methodArgs
   41 type: . INT
   42     | . BOOLEAN

    BOOLEAN  shift, and go to state 6
    INT      shift, and go to state 7

    methodArgs  go to state 98
    type        go to state 33


State 67

   11 methodDecList: type ID '(' methodArgs ')' block .

    $default  reduce using rule 11 (methodDecList)


State 68

    7 fieldArgs: . ID
    8          | . ID ',' fieldArgs
    9          | . ID '[' intlit ']'
   10          | . ID '[' intlit ']' ',' fieldArgs
   10          | ID '[' intlit ']' ',' . fieldArgs

    ID  shift, and go to state 40

    fieldArgs  go to state 99


State 69

   36 statementContents: BREAK ';' .

    $default  reduce using rule 36 (statementContents)


State 70

   67 methodcall: CALLOUT '(' . stringLiteral ')'
   68           | CALLOUT '(' . stringLiteral ',' calloutArgsList ')'
   73 stringLiteral: . STRINGLIT

    STRINGLIT  shift, and go to state 100

    stringLiteral  go to state 101


State 71

   37 statementContents: CONTINUE ';' .

    $default  reduce using rule 37 (statementContents)


State 72

   33 statementContents: FOR ID . '=' expr ',' expr block

    '='  shift, and go to state 102


State 73

   31 statementContents: IF '(' . expr ')' block
   32                  | IF '(' . expr ')' block ELSE block
   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78

    expr        go to state 103
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 74

   81 boollit: FALSE .

    $default  reduce using rule 81 (boollit)


State 75

   80 boollit: TRUE .

    $default  reduce using rule 80 (boollit)


State 76

   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   46     | '-' . expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78

    expr        go to state 104
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 77

   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   47     | '!' . expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78

    expr        go to state 105
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 78

   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   61     | '(' . expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78

    expr        go to state 106
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 79

   34 statementContents: RETURN ';' .

    $default  reduce using rule 34 (statementContents)


State 80

   35 statementContents: RETURN expr . ';'
   48 expr: expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . EE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    EE   shift, and go to state 109
    NE   shift, and go to state 110
    '<'  shift, and go to state 111
    '>'  shift, and go to state 112
    LE   shift, and go to state 113
    GE   shift, and go to state 114
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119
    ';'  shift, and go to state 120


State 81

   43 expr: location .

    $default  reduce using rule 43 (expr)


State 82

   44 expr: methodcall .

    $default  reduce using rule 44 (expr)


State 83

   45 expr: literal .

    $default  reduce using rule 45 (expr)


State 84

   76 literal: intlit .

    $default  reduce using rule 76 (literal)


State 85

   77 literal: boollit .

    $default  reduce using rule 77 (literal)


State 86

   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   63         | ID '[' . expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78

    expr        go to state 121
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 87

   20 block: '{' varDecl '}' .

    $default  reduce using rule 20 (block)


State 88

   19 block: . '{' '}'
   20      | . '{' varDecl '}'
   21      | . '{' statement '}'
   22      | . '{' varDecl statement '}'
   22      | '{' varDecl statement . '}'
   27 statementContents: . location '=' expr ';'
   28                  | . location PLUSEQ expr ';'
   29                  | . location MINUSEQ expr ';'
   30                  | . methodcall ';'
   31                  | . IF '(' expr ')' block
   32                  | . IF '(' expr ')' block ELSE block
   33                  | . FOR ID '=' expr ',' expr block
   34                  | . RETURN ';'
   35                  | . RETURN expr ';'
   36                  | . BREAK ';'
   37                  | . CONTINUE ';'
   38                  | . block
   40 statement: statement . statementContents
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'

    BREAK     shift, and go to state 49
    CALLOUT   shift, and go to state 50
    CONTINUE  shift, and go to state 51
    FOR       shift, and go to state 52
    IF        shift, and go to state 53
    RETURN    shift, and go to state 54
    ID        shift, and go to state 55
    '{'       shift, and go to state 42
    '}'       shift, and go to state 122

    block              go to state 57
    statementContents  go to state 90
    location           go to state 62
    methodname         go to state 63
    methodcall         go to state 64


State 89

   21 block: '{' statement '}' .

    $default  reduce using rule 21 (block)


State 90

   40 statement: statement statementContents .

    $default  reduce using rule 40 (statement)


State 91

   26 vars: ID .

    $default  reduce using rule 26 (vars)


State 92

   23 varDecl: type vars . ';' varDecl
   24        | type vars . ';'
   25 vars: vars . ',' ID

    ','  shift, and go to state 123
    ';'  shift, and go to state 124


State 93

   27 statementContents: location '=' . expr ';'
   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78

    expr        go to state 125
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 94

   28 statementContents: location PLUSEQ . expr ';'
   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78

    expr        go to state 126
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 95

   29 statementContents: location MINUSEQ . expr ';'
   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78

    expr        go to state 127
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 96

   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   65           | methodname '(' . ')'
   66           | . methodname '(' arguments ')'
   66           | methodname '(' . arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   74 arguments: . expr
   75          | . expr ',' arguments
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78
    ')'      shift, and go to state 128

    expr        go to state 129
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    arguments   go to state 130
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 97

   30 statementContents: methodcall ';' .

    $default  reduce using rule 30 (statementContents)


State 98

   18 methodArgs: type ID ',' methodArgs .

    $default  reduce using rule 18 (methodArgs)


State 99

   10 fieldArgs: ID '[' intlit ']' ',' fieldArgs .

    $default  reduce using rule 10 (fieldArgs)


State 100

   73 stringLiteral: STRINGLIT .

    $default  reduce using rule 73 (stringLiteral)


State 101

   67 methodcall: CALLOUT '(' stringLiteral . ')'
   68           | CALLOUT '(' stringLiteral . ',' calloutArgsList ')'

    ')'  shift, and go to state 131
    ','  shift, and go to state 132


State 102

   33 statementContents: FOR ID '=' . expr ',' expr block
   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78

    expr        go to state 133
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 103

   31 statementContents: IF '(' expr . ')' block
   32                  | IF '(' expr . ')' block ELSE block
   48 expr: expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . EE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    EE   shift, and go to state 109
    NE   shift, and go to state 110
    '<'  shift, and go to state 111
    '>'  shift, and go to state 112
    LE   shift, and go to state 113
    GE   shift, and go to state 114
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119
    ')'  shift, and go to state 134


State 104

   46 expr: '-' expr .  [AND, OR, EE, NE, '<', '>', LE, GE, '+', '-', ')', ']', '{', ',', ';']
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . EE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr

    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 46 (expr)

    Conflict between rule 46 and token AND resolved as reduce (AND < '-').
    Conflict between rule 46 and token OR resolved as reduce (OR < '-').
    Conflict between rule 46 and token EE resolved as reduce (EE < '-').
    Conflict between rule 46 and token NE resolved as reduce (NE < '-').
    Conflict between rule 46 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 46 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 46 and token LE resolved as reduce (LE < '-').
    Conflict between rule 46 and token GE resolved as reduce (GE < '-').
    Conflict between rule 46 and token '+' resolved as reduce (%left '+').
    Conflict between rule 46 and token '-' resolved as reduce (%left '-').
    Conflict between rule 46 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 46 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 46 and token '%' resolved as shift ('-' < '%').


State 105

   47 expr: '!' expr .  [AND, OR, EE, NE, '<', '>', LE, GE, '+', '-', '*', '/', '%', ')', ']', '{', ',', ';']
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . EE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr

    $default  reduce using rule 47 (expr)

    Conflict between rule 47 and token AND resolved as reduce (AND < '!').
    Conflict between rule 47 and token OR resolved as reduce (OR < '!').
    Conflict between rule 47 and token EE resolved as reduce (EE < '!').
    Conflict between rule 47 and token NE resolved as reduce (NE < '!').
    Conflict between rule 47 and token '<' resolved as reduce ('<' < '!').
    Conflict between rule 47 and token '>' resolved as reduce ('>' < '!').
    Conflict between rule 47 and token LE resolved as reduce (LE < '!').
    Conflict between rule 47 and token GE resolved as reduce (GE < '!').
    Conflict between rule 47 and token '+' resolved as reduce ('+' < '!').
    Conflict between rule 47 and token '-' resolved as reduce ('-' < '!').
    Conflict between rule 47 and token '*' resolved as reduce ('*' < '!').
    Conflict between rule 47 and token '/' resolved as reduce ('/' < '!').
    Conflict between rule 47 and token '%' resolved as reduce ('%' < '!').


State 106

   48 expr: expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . EE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   61     | '(' expr . ')'

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    EE   shift, and go to state 109
    NE   shift, and go to state 110
    '<'  shift, and go to state 111
    '>'  shift, and go to state 112
    LE   shift, and go to state 113
    GE   shift, and go to state 114
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119
    ')'  shift, and go to state 135


State 107

   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   59     | expr AND . expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78

    expr        go to state 136
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 108

   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   60     | expr OR . expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78

    expr        go to state 137
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 109

   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   57     | expr EE . expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78

    expr        go to state 138
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 110

   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   58     | expr NE . expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78

    expr        go to state 139
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 111

   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   53     | expr '<' . expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78

    expr        go to state 140
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 112

   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   54     | expr '>' . expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78

    expr        go to state 141
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 113

   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   55     | expr LE . expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78

    expr        go to state 142
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 114

   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   56     | expr GE . expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78

    expr        go to state 143
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 115

   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   51     | expr '+' . expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78

    expr        go to state 144
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 116

   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   52     | expr '-' . expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78

    expr        go to state 145
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 117

   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   48     | expr '*' . expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78

    expr        go to state 146
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 118

   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   49     | expr '/' . expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78

    expr        go to state 147
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 119

   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   50     | expr '%' . expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78

    expr        go to state 148
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 120

   35 statementContents: RETURN expr ';' .

    $default  reduce using rule 35 (statementContents)


State 121

   48 expr: expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . EE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   63 location: ID '[' expr . ']'

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    EE   shift, and go to state 109
    NE   shift, and go to state 110
    '<'  shift, and go to state 111
    '>'  shift, and go to state 112
    LE   shift, and go to state 113
    GE   shift, and go to state 114
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119
    ']'  shift, and go to state 149


State 122

   22 block: '{' varDecl statement '}' .

    $default  reduce using rule 22 (block)


State 123

   25 vars: vars ',' . ID

    ID  shift, and go to state 150


State 124

   23 varDecl: . type vars ';' varDecl
   23        | type vars ';' . varDecl
   24        | . type vars ';'
   24        | type vars ';' .  [BREAK, CALLOUT, CONTINUE, FOR, IF, RETURN, ID, '{', '}']
   41 type: . INT
   42     | . BOOLEAN

    BOOLEAN  shift, and go to state 6
    INT      shift, and go to state 7

    $default  reduce using rule 24 (varDecl)

    varDecl  go to state 151
    type     go to state 61


State 125

   27 statementContents: location '=' expr . ';'
   48 expr: expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . EE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    EE   shift, and go to state 109
    NE   shift, and go to state 110
    '<'  shift, and go to state 111
    '>'  shift, and go to state 112
    LE   shift, and go to state 113
    GE   shift, and go to state 114
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119
    ';'  shift, and go to state 152


State 126

   28 statementContents: location PLUSEQ expr . ';'
   48 expr: expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . EE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    EE   shift, and go to state 109
    NE   shift, and go to state 110
    '<'  shift, and go to state 111
    '>'  shift, and go to state 112
    LE   shift, and go to state 113
    GE   shift, and go to state 114
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119
    ';'  shift, and go to state 153


State 127

   29 statementContents: location MINUSEQ expr . ';'
   48 expr: expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . EE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    EE   shift, and go to state 109
    NE   shift, and go to state 110
    '<'  shift, and go to state 111
    '>'  shift, and go to state 112
    LE   shift, and go to state 113
    GE   shift, and go to state 114
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119
    ';'  shift, and go to state 154


State 128

   65 methodcall: methodname '(' ')' .

    $default  reduce using rule 65 (methodcall)


State 129

   48 expr: expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . EE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   74 arguments: expr .  [')']
   75          | expr . ',' arguments

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    EE   shift, and go to state 109
    NE   shift, and go to state 110
    '<'  shift, and go to state 111
    '>'  shift, and go to state 112
    LE   shift, and go to state 113
    GE   shift, and go to state 114
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119
    ','  shift, and go to state 155

    $default  reduce using rule 74 (arguments)


State 130

   66 methodcall: methodname '(' arguments . ')'

    ')'  shift, and go to state 156


State 131

   67 methodcall: CALLOUT '(' stringLiteral ')' .

    $default  reduce using rule 67 (methodcall)


State 132

   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   68           | CALLOUT '(' stringLiteral ',' . calloutArgsList ')'
   69 calloutArgsList: . expr
   70                | . stringLiteral
   71                | . expr ',' calloutArgsList
   72                | . stringLiteral ',' calloutArgsList
   73 stringLiteral: . STRINGLIT
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT    shift, and go to state 50
    FALSE      shift, and go to state 74
    TRUE       shift, and go to state 75
    '-'        shift, and go to state 76
    '!'        shift, and go to state 77
    STRINGLIT  shift, and go to state 100
    DECLIT     shift, and go to state 37
    HEXLIT     shift, and go to state 38
    ID         shift, and go to state 55
    '('        shift, and go to state 78

    expr             go to state 157
    location         go to state 81
    methodname       go to state 63
    methodcall       go to state 82
    calloutArgsList  go to state 158
    stringLiteral    go to state 159
    literal          go to state 83
    intlit           go to state 84
    boollit          go to state 85


State 133

   33 statementContents: FOR ID '=' expr . ',' expr block
   48 expr: expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . EE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    EE   shift, and go to state 109
    NE   shift, and go to state 110
    '<'  shift, and go to state 111
    '>'  shift, and go to state 112
    LE   shift, and go to state 113
    GE   shift, and go to state 114
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119
    ','  shift, and go to state 160


State 134

   19 block: . '{' '}'
   20      | . '{' varDecl '}'
   21      | . '{' statement '}'
   22      | . '{' varDecl statement '}'
   31 statementContents: IF '(' expr ')' . block
   32                  | IF '(' expr ')' . block ELSE block

    '{'  shift, and go to state 42

    block  go to state 161


State 135

   61 expr: '(' expr ')' .

    $default  reduce using rule 61 (expr)


State 136

   48 expr: expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . EE expr
   58     | expr . NE expr
   59     | expr . AND expr
   59     | expr AND expr .  [AND, OR, ')', ']', '{', ',', ';']
   60     | expr . OR expr

    EE   shift, and go to state 109
    NE   shift, and go to state 110
    '<'  shift, and go to state 111
    '>'  shift, and go to state 112
    LE   shift, and go to state 113
    GE   shift, and go to state 114
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 59 (expr)

    Conflict between rule 59 and token AND resolved as reduce (%left AND).
    Conflict between rule 59 and token OR resolved as reduce (%left OR).
    Conflict between rule 59 and token EE resolved as shift (AND < EE).
    Conflict between rule 59 and token NE resolved as shift (AND < NE).
    Conflict between rule 59 and token '<' resolved as shift (AND < '<').
    Conflict between rule 59 and token '>' resolved as shift (AND < '>').
    Conflict between rule 59 and token LE resolved as shift (AND < LE).
    Conflict between rule 59 and token GE resolved as shift (AND < GE).
    Conflict between rule 59 and token '+' resolved as shift (AND < '+').
    Conflict between rule 59 and token '-' resolved as shift (AND < '-').
    Conflict between rule 59 and token '*' resolved as shift (AND < '*').
    Conflict between rule 59 and token '/' resolved as shift (AND < '/').
    Conflict between rule 59 and token '%' resolved as shift (AND < '%').


State 137

   48 expr: expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . EE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   60     | expr OR expr .  [AND, OR, ')', ']', '{', ',', ';']

    EE   shift, and go to state 109
    NE   shift, and go to state 110
    '<'  shift, and go to state 111
    '>'  shift, and go to state 112
    LE   shift, and go to state 113
    GE   shift, and go to state 114
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 60 (expr)

    Conflict between rule 60 and token AND resolved as reduce (%left AND).
    Conflict between rule 60 and token OR resolved as reduce (%left OR).
    Conflict between rule 60 and token EE resolved as shift (OR < EE).
    Conflict between rule 60 and token NE resolved as shift (OR < NE).
    Conflict between rule 60 and token '<' resolved as shift (OR < '<').
    Conflict between rule 60 and token '>' resolved as shift (OR < '>').
    Conflict between rule 60 and token LE resolved as shift (OR < LE).
    Conflict between rule 60 and token GE resolved as shift (OR < GE).
    Conflict between rule 60 and token '+' resolved as shift (OR < '+').
    Conflict between rule 60 and token '-' resolved as shift (OR < '-').
    Conflict between rule 60 and token '*' resolved as shift (OR < '*').
    Conflict between rule 60 and token '/' resolved as shift (OR < '/').
    Conflict between rule 60 and token '%' resolved as shift (OR < '%').


State 138

   48 expr: expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . EE expr
   57     | expr EE expr .  [AND, OR, EE, NE, ')', ']', '{', ',', ';']
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr

    '<'  shift, and go to state 111
    '>'  shift, and go to state 112
    LE   shift, and go to state 113
    GE   shift, and go to state 114
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 57 (expr)

    Conflict between rule 57 and token AND resolved as reduce (AND < EE).
    Conflict between rule 57 and token OR resolved as reduce (OR < EE).
    Conflict between rule 57 and token EE resolved as reduce (%left EE).
    Conflict between rule 57 and token NE resolved as reduce (%left NE).
    Conflict between rule 57 and token '<' resolved as shift (EE < '<').
    Conflict between rule 57 and token '>' resolved as shift (EE < '>').
    Conflict between rule 57 and token LE resolved as shift (EE < LE).
    Conflict between rule 57 and token GE resolved as shift (EE < GE).
    Conflict between rule 57 and token '+' resolved as shift (EE < '+').
    Conflict between rule 57 and token '-' resolved as shift (EE < '-').
    Conflict between rule 57 and token '*' resolved as shift (EE < '*').
    Conflict between rule 57 and token '/' resolved as shift (EE < '/').
    Conflict between rule 57 and token '%' resolved as shift (EE < '%').


State 139

   48 expr: expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . EE expr
   58     | expr . NE expr
   58     | expr NE expr .  [AND, OR, EE, NE, ')', ']', '{', ',', ';']
   59     | expr . AND expr
   60     | expr . OR expr

    '<'  shift, and go to state 111
    '>'  shift, and go to state 112
    LE   shift, and go to state 113
    GE   shift, and go to state 114
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 58 (expr)

    Conflict between rule 58 and token AND resolved as reduce (AND < NE).
    Conflict between rule 58 and token OR resolved as reduce (OR < NE).
    Conflict between rule 58 and token EE resolved as reduce (%left EE).
    Conflict between rule 58 and token NE resolved as reduce (%left NE).
    Conflict between rule 58 and token '<' resolved as shift (NE < '<').
    Conflict between rule 58 and token '>' resolved as shift (NE < '>').
    Conflict between rule 58 and token LE resolved as shift (NE < LE).
    Conflict between rule 58 and token GE resolved as shift (NE < GE).
    Conflict between rule 58 and token '+' resolved as shift (NE < '+').
    Conflict between rule 58 and token '-' resolved as shift (NE < '-').
    Conflict between rule 58 and token '*' resolved as shift (NE < '*').
    Conflict between rule 58 and token '/' resolved as shift (NE < '/').
    Conflict between rule 58 and token '%' resolved as shift (NE < '%').


State 140

   48 expr: expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '<' expr
   53     | expr '<' expr .  [AND, OR, EE, NE, '<', '>', LE, GE, ')', ']', '{', ',', ';']
   54     | expr . '>' expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . EE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 53 (expr)

    Conflict between rule 53 and token AND resolved as reduce (AND < '<').
    Conflict between rule 53 and token OR resolved as reduce (OR < '<').
    Conflict between rule 53 and token EE resolved as reduce (EE < '<').
    Conflict between rule 53 and token NE resolved as reduce (NE < '<').
    Conflict between rule 53 and token '<' resolved as reduce (%left '<').
    Conflict between rule 53 and token '>' resolved as reduce (%left '>').
    Conflict between rule 53 and token LE resolved as reduce (%left LE).
    Conflict between rule 53 and token GE resolved as reduce (%left GE).
    Conflict between rule 53 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 53 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 53 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 53 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 53 and token '%' resolved as shift ('<' < '%').


State 141

   48 expr: expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   54     | expr '>' expr .  [AND, OR, EE, NE, '<', '>', LE, GE, ')', ']', '{', ',', ';']
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . EE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 54 (expr)

    Conflict between rule 54 and token AND resolved as reduce (AND < '>').
    Conflict between rule 54 and token OR resolved as reduce (OR < '>').
    Conflict between rule 54 and token EE resolved as reduce (EE < '>').
    Conflict between rule 54 and token NE resolved as reduce (NE < '>').
    Conflict between rule 54 and token '<' resolved as reduce (%left '<').
    Conflict between rule 54 and token '>' resolved as reduce (%left '>').
    Conflict between rule 54 and token LE resolved as reduce (%left LE).
    Conflict between rule 54 and token GE resolved as reduce (%left GE).
    Conflict between rule 54 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 54 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 54 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 54 and token '/' resolved as shift ('>' < '/').
    Conflict between rule 54 and token '%' resolved as shift ('>' < '%').


State 142

   48 expr: expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . LE expr
   55     | expr LE expr .  [AND, OR, EE, NE, '<', '>', LE, GE, ')', ']', '{', ',', ';']
   56     | expr . GE expr
   57     | expr . EE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 55 (expr)

    Conflict between rule 55 and token AND resolved as reduce (AND < LE).
    Conflict between rule 55 and token OR resolved as reduce (OR < LE).
    Conflict between rule 55 and token EE resolved as reduce (EE < LE).
    Conflict between rule 55 and token NE resolved as reduce (NE < LE).
    Conflict between rule 55 and token '<' resolved as reduce (%left '<').
    Conflict between rule 55 and token '>' resolved as reduce (%left '>').
    Conflict between rule 55 and token LE resolved as reduce (%left LE).
    Conflict between rule 55 and token GE resolved as reduce (%left GE).
    Conflict between rule 55 and token '+' resolved as shift (LE < '+').
    Conflict between rule 55 and token '-' resolved as shift (LE < '-').
    Conflict between rule 55 and token '*' resolved as shift (LE < '*').
    Conflict between rule 55 and token '/' resolved as shift (LE < '/').
    Conflict between rule 55 and token '%' resolved as shift (LE < '%').


State 143

   48 expr: expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . LE expr
   56     | expr . GE expr
   56     | expr GE expr .  [AND, OR, EE, NE, '<', '>', LE, GE, ')', ']', '{', ',', ';']
   57     | expr . EE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 56 (expr)

    Conflict between rule 56 and token AND resolved as reduce (AND < GE).
    Conflict between rule 56 and token OR resolved as reduce (OR < GE).
    Conflict between rule 56 and token EE resolved as reduce (EE < GE).
    Conflict between rule 56 and token NE resolved as reduce (NE < GE).
    Conflict between rule 56 and token '<' resolved as reduce (%left '<').
    Conflict between rule 56 and token '>' resolved as reduce (%left '>').
    Conflict between rule 56 and token LE resolved as reduce (%left LE).
    Conflict between rule 56 and token GE resolved as reduce (%left GE).
    Conflict between rule 56 and token '+' resolved as shift (GE < '+').
    Conflict between rule 56 and token '-' resolved as shift (GE < '-').
    Conflict between rule 56 and token '*' resolved as shift (GE < '*').
    Conflict between rule 56 and token '/' resolved as shift (GE < '/').
    Conflict between rule 56 and token '%' resolved as shift (GE < '%').


State 144

   48 expr: expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . '+' expr
   51     | expr '+' expr .  [AND, OR, EE, NE, '<', '>', LE, GE, '+', '-', ')', ']', '{', ',', ';']
   52     | expr . '-' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . EE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr

    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 51 (expr)

    Conflict between rule 51 and token AND resolved as reduce (AND < '+').
    Conflict between rule 51 and token OR resolved as reduce (OR < '+').
    Conflict between rule 51 and token EE resolved as reduce (EE < '+').
    Conflict between rule 51 and token NE resolved as reduce (NE < '+').
    Conflict between rule 51 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 51 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 51 and token LE resolved as reduce (LE < '+').
    Conflict between rule 51 and token GE resolved as reduce (GE < '+').
    Conflict between rule 51 and token '+' resolved as reduce (%left '+').
    Conflict between rule 51 and token '-' resolved as reduce (%left '-').
    Conflict between rule 51 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 51 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 51 and token '%' resolved as shift ('+' < '%').


State 145

   48 expr: expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . '+' expr
   52     | expr . '-' expr
   52     | expr '-' expr .  [AND, OR, EE, NE, '<', '>', LE, GE, '+', '-', ')', ']', '{', ',', ';']
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . EE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr

    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 52 (expr)

    Conflict between rule 52 and token AND resolved as reduce (AND < '-').
    Conflict between rule 52 and token OR resolved as reduce (OR < '-').
    Conflict between rule 52 and token EE resolved as reduce (EE < '-').
    Conflict between rule 52 and token NE resolved as reduce (NE < '-').
    Conflict between rule 52 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 52 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 52 and token LE resolved as reduce (LE < '-').
    Conflict between rule 52 and token GE resolved as reduce (GE < '-').
    Conflict between rule 52 and token '+' resolved as reduce (%left '+').
    Conflict between rule 52 and token '-' resolved as reduce (%left '-').
    Conflict between rule 52 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 52 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 52 and token '%' resolved as shift ('-' < '%').


State 146

   48 expr: expr . '*' expr
   48     | expr '*' expr .  [AND, OR, EE, NE, '<', '>', LE, GE, '+', '-', '*', '/', '%', ')', ']', '{', ',', ';']
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . EE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr

    $default  reduce using rule 48 (expr)

    Conflict between rule 48 and token AND resolved as reduce (AND < '*').
    Conflict between rule 48 and token OR resolved as reduce (OR < '*').
    Conflict between rule 48 and token EE resolved as reduce (EE < '*').
    Conflict between rule 48 and token NE resolved as reduce (NE < '*').
    Conflict between rule 48 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 48 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 48 and token LE resolved as reduce (LE < '*').
    Conflict between rule 48 and token GE resolved as reduce (GE < '*').
    Conflict between rule 48 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 48 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 48 and token '*' resolved as reduce (%left '*').
    Conflict between rule 48 and token '/' resolved as reduce (%left '/').
    Conflict between rule 48 and token '%' resolved as reduce (%left '%').


State 147

   48 expr: expr . '*' expr
   49     | expr . '/' expr
   49     | expr '/' expr .  [AND, OR, EE, NE, '<', '>', LE, GE, '+', '-', '*', '/', '%', ')', ']', '{', ',', ';']
   50     | expr . '%' expr
   51     | expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . EE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr

    $default  reduce using rule 49 (expr)

    Conflict between rule 49 and token AND resolved as reduce (AND < '/').
    Conflict between rule 49 and token OR resolved as reduce (OR < '/').
    Conflict between rule 49 and token EE resolved as reduce (EE < '/').
    Conflict between rule 49 and token NE resolved as reduce (NE < '/').
    Conflict between rule 49 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 49 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 49 and token LE resolved as reduce (LE < '/').
    Conflict between rule 49 and token GE resolved as reduce (GE < '/').
    Conflict between rule 49 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 49 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 49 and token '*' resolved as reduce (%left '*').
    Conflict between rule 49 and token '/' resolved as reduce (%left '/').
    Conflict between rule 49 and token '%' resolved as reduce (%left '%').


State 148

   48 expr: expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   50     | expr '%' expr .  [AND, OR, EE, NE, '<', '>', LE, GE, '+', '-', '*', '/', '%', ')', ']', '{', ',', ';']
   51     | expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . EE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr

    $default  reduce using rule 50 (expr)

    Conflict between rule 50 and token AND resolved as reduce (AND < '%').
    Conflict between rule 50 and token OR resolved as reduce (OR < '%').
    Conflict between rule 50 and token EE resolved as reduce (EE < '%').
    Conflict between rule 50 and token NE resolved as reduce (NE < '%').
    Conflict between rule 50 and token '<' resolved as reduce ('<' < '%').
    Conflict between rule 50 and token '>' resolved as reduce ('>' < '%').
    Conflict between rule 50 and token LE resolved as reduce (LE < '%').
    Conflict between rule 50 and token GE resolved as reduce (GE < '%').
    Conflict between rule 50 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 50 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 50 and token '*' resolved as reduce (%left '*').
    Conflict between rule 50 and token '/' resolved as reduce (%left '/').
    Conflict between rule 50 and token '%' resolved as reduce (%left '%').


State 149

   63 location: ID '[' expr ']' .

    $default  reduce using rule 63 (location)


State 150

   25 vars: vars ',' ID .

    $default  reduce using rule 25 (vars)


State 151

   23 varDecl: type vars ';' varDecl .

    $default  reduce using rule 23 (varDecl)


State 152

   27 statementContents: location '=' expr ';' .

    $default  reduce using rule 27 (statementContents)


State 153

   28 statementContents: location PLUSEQ expr ';' .

    $default  reduce using rule 28 (statementContents)


State 154

   29 statementContents: location MINUSEQ expr ';' .

    $default  reduce using rule 29 (statementContents)


State 155

   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   74 arguments: . expr
   75          | . expr ',' arguments
   75          | expr ',' . arguments
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78

    expr        go to state 129
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    arguments   go to state 162
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 156

   66 methodcall: methodname '(' arguments ')' .

    $default  reduce using rule 66 (methodcall)


State 157

   48 expr: expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . EE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   69 calloutArgsList: expr .  [')']
   71                | expr . ',' calloutArgsList

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    EE   shift, and go to state 109
    NE   shift, and go to state 110
    '<'  shift, and go to state 111
    '>'  shift, and go to state 112
    LE   shift, and go to state 113
    GE   shift, and go to state 114
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119
    ','  shift, and go to state 163

    $default  reduce using rule 69 (calloutArgsList)


State 158

   68 methodcall: CALLOUT '(' stringLiteral ',' calloutArgsList . ')'

    ')'  shift, and go to state 164


State 159

   70 calloutArgsList: stringLiteral .  [')']
   72                | stringLiteral . ',' calloutArgsList

    ','  shift, and go to state 165

    $default  reduce using rule 70 (calloutArgsList)


State 160

   33 statementContents: FOR ID '=' expr ',' . expr block
   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT  shift, and go to state 50
    FALSE    shift, and go to state 74
    TRUE     shift, and go to state 75
    '-'      shift, and go to state 76
    '!'      shift, and go to state 77
    DECLIT   shift, and go to state 37
    HEXLIT   shift, and go to state 38
    ID       shift, and go to state 55
    '('      shift, and go to state 78

    expr        go to state 166
    location    go to state 81
    methodname  go to state 63
    methodcall  go to state 82
    literal     go to state 83
    intlit      go to state 84
    boollit     go to state 85


State 161

   31 statementContents: IF '(' expr ')' block .  [BREAK, CALLOUT, CONTINUE, FOR, IF, RETURN, ID, '{', '}']
   32                  | IF '(' expr ')' block . ELSE block

    ELSE  shift, and go to state 167

    $default  reduce using rule 31 (statementContents)


State 162

   75 arguments: expr ',' arguments .

    $default  reduce using rule 75 (arguments)


State 163

   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   69 calloutArgsList: . expr
   70                | . stringLiteral
   71                | . expr ',' calloutArgsList
   71                | expr ',' . calloutArgsList
   72                | . stringLiteral ',' calloutArgsList
   73 stringLiteral: . STRINGLIT
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT    shift, and go to state 50
    FALSE      shift, and go to state 74
    TRUE       shift, and go to state 75
    '-'        shift, and go to state 76
    '!'        shift, and go to state 77
    STRINGLIT  shift, and go to state 100
    DECLIT     shift, and go to state 37
    HEXLIT     shift, and go to state 38
    ID         shift, and go to state 55
    '('        shift, and go to state 78

    expr             go to state 157
    location         go to state 81
    methodname       go to state 63
    methodcall       go to state 82
    calloutArgsList  go to state 168
    stringLiteral    go to state 159
    literal          go to state 83
    intlit           go to state 84
    boollit          go to state 85


State 164

   68 methodcall: CALLOUT '(' stringLiteral ',' calloutArgsList ')' .

    $default  reduce using rule 68 (methodcall)


State 165

   43 expr: . location
   44     | . methodcall
   45     | . literal
   46     | . '-' expr
   47     | . '!' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr '+' expr
   52     | . expr '-' expr
   53     | . expr '<' expr
   54     | . expr '>' expr
   55     | . expr LE expr
   56     | . expr GE expr
   57     | . expr EE expr
   58     | . expr NE expr
   59     | . expr AND expr
   60     | . expr OR expr
   61     | . '(' expr ')'
   62 location: . ID
   63         | . ID '[' expr ']'
   64 methodname: . ID
   65 methodcall: . methodname '(' ')'
   66           | . methodname '(' arguments ')'
   67           | . CALLOUT '(' stringLiteral ')'
   68           | . CALLOUT '(' stringLiteral ',' calloutArgsList ')'
   69 calloutArgsList: . expr
   70                | . stringLiteral
   71                | . expr ',' calloutArgsList
   72                | . stringLiteral ',' calloutArgsList
   72                | stringLiteral ',' . calloutArgsList
   73 stringLiteral: . STRINGLIT
   76 literal: . intlit
   77        | . boollit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE

    CALLOUT    shift, and go to state 50
    FALSE      shift, and go to state 74
    TRUE       shift, and go to state 75
    '-'        shift, and go to state 76
    '!'        shift, and go to state 77
    STRINGLIT  shift, and go to state 100
    DECLIT     shift, and go to state 37
    HEXLIT     shift, and go to state 38
    ID         shift, and go to state 55
    '('        shift, and go to state 78

    expr             go to state 157
    location         go to state 81
    methodname       go to state 63
    methodcall       go to state 82
    calloutArgsList  go to state 169
    stringLiteral    go to state 159
    literal          go to state 83
    intlit           go to state 84
    boollit          go to state 85


State 166

   19 block: . '{' '}'
   20      | . '{' varDecl '}'
   21      | . '{' statement '}'
   22      | . '{' varDecl statement '}'
   33 statementContents: FOR ID '=' expr ',' expr . block
   48 expr: expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . '+' expr
   52     | expr . '-' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . EE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    EE   shift, and go to state 109
    NE   shift, and go to state 110
    '<'  shift, and go to state 111
    '>'  shift, and go to state 112
    LE   shift, and go to state 113
    GE   shift, and go to state 114
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119
    '{'  shift, and go to state 42

    block  go to state 170


State 167

   19 block: . '{' '}'
   20      | . '{' varDecl '}'
   21      | . '{' statement '}'
   22      | . '{' varDecl statement '}'
   32 statementContents: IF '(' expr ')' block ELSE . block

    '{'  shift, and go to state 42

    block  go to state 171


State 168

   71 calloutArgsList: expr ',' calloutArgsList .

    $default  reduce using rule 71 (calloutArgsList)


State 169

   72 calloutArgsList: stringLiteral ',' calloutArgsList .

    $default  reduce using rule 72 (calloutArgsList)


State 170

   33 statementContents: FOR ID '=' expr ',' expr block .

    $default  reduce using rule 33 (statementContents)


State 171

   32 statementContents: IF '(' expr ')' block ELSE block .

    $default  reduce using rule 32 (statementContents)
