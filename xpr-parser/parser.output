Nonterminals useless in grammar

   charlit


Terminals unused in grammar

   EOL
   CHARLIT
   SINGLEQ
   DOUBLEQ


Rules useless in grammar

   83 charlit: CHARLIT


State 160 conflicts: 1 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: classBegin $end

    1 classBegin: CLASS PROGRAM '{' '}'
    2           | CLASS PROGRAM '{' fieldDec methodDecList '}'
    3           | CLASS PROGRAM '{' methodDecList '}'
    4           | CLASS PROGRAM '{' fieldDec '}'

    5 fieldDec: type fieldArgs ';'
    6         | fieldDec type fieldArgs ';'

    7 fieldArgs: ID
    8          | ID ',' fieldArgs
    9          | ID '[' intlit ']'
   10          | ID '[' intlit ']' ',' fieldArgs

   11 methodDec: type ID '(' methodArgs ')' block
   12          | type ID '(' ')' block
   13          | VOID ID '(' methodArgs ')' block
   14          | VOID ID '(' ')' block

   15 methodDecList: methodDec
   16              | methodDecList methodDec

   17 methodArg: type ID

   18 methodArgs: methodArg
   19           | methodArg ',' methodArgs

   20 block: '{' '}'
   21      | '{' varDecl '}'
   22      | '{' statement '}'
   23      | '{' varDecl statement '}'

   24 varDecl: type blockVars ';'
   25        | type blockVars ';' varDecl

   26 blockVars: ID
   27          | blockVars ',' ID

   28 statementContents: location '=' expr ';'
   29                  | location PLUSEQ expr ';'
   30                  | location MINUSEQ expr ';'
   31                  | methodcall ';'
   32                  | IF '(' expr ')' block
   33                  | IF '(' expr ')' block ELSE block
   34                  | FOR ID '=' expr ',' expr block
   35                  | RETURN ';'
   36                  | RETURN expr ';'
   37                  | BREAK ';'
   38                  | CONTINUE ';'
   39                  | block

   40 statement: statementContents
   41          | statement statementContents

   42 type: INT
   43     | BOOLEAN

   44 expr: location
   45     | methodcall
   46     | literal
   47     | '-' expr
   48     | '!' expr
   49     | expr '*' expr
   50     | expr '/' expr
   51     | expr '%' expr
   52     | expr '+' expr
   53     | expr '-' expr
   54     | expr '<' expr
   55     | expr '>' expr
   56     | expr LE expr
   57     | expr GE expr
   58     | expr EE expr
   59     | expr NE expr
   60     | expr AND expr
   61     | expr OR expr
   62     | '(' expr ')'

   63 location: ID
   64         | ID '[' expr ']'

   65 methodcall: ID '(' ')'
   66           | ID '(' arguments ')'
   67           | CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | CALLOUT '(' stringlit ')'

   69 calloutArgsList: expr
   70                | stringlit
   71                | expr ',' calloutArgsList
   72                | stringlit ',' calloutArgsList

   73 arguments: expr
   74          | expr ',' arguments

   75 literal: intlit
   76        | boollit
   77        | stringlit

   78 intlit: DECLIT
   79       | HEXLIT

   80 boollit: TRUE
   81        | FALSE

   82 stringlit: STRINGLIT


Terminals, with rules where they appear

$end (0) 0
'!' (33) 48
'%' (37) 51
'(' (40) 11 12 13 14 32 33 62 65 66 67 68
')' (41) 11 12 13 14 32 33 62 65 66 67 68
'*' (42) 49
'+' (43) 52
',' (44) 8 10 19 27 34 67 71 72 74
'-' (45) 47 53
'/' (47) 50
';' (59) 5 6 24 25 28 29 30 31 35 36 37 38
'<' (60) 54
'=' (61) 28 34
'>' (62) 55
'[' (91) 9 10 64
']' (93) 9 10 64
'{' (123) 1 2 3 4 20 21 22 23
'}' (125) 1 2 3 4 20 21 22 23
error (256)
BOOLEAN (258) 43
BREAK (259) 37
CALLOUT (260) 67 68
CLASS (261) 1 2 3 4
CONTINUE (262) 38
ELSE (263) 33
FALSE (264) 81
FOR (265) 34
INT (266) 42
IF (267) 32 33
RETURN (268) 35 36
TRUE (269) 80
VOID (270) 13 14
EOL (271)
PROGRAM (272) 1 2 3 4
PLUSEQ (273) 29
MINUSEQ (274) 30
AND (275) 60
OR (276) 61
EE (277) 58
NE (278) 59
LE (279) 56
GE (280) 57
STRINGLIT (281) 82
CHARLIT (282)
DECLIT (283) 78
HEXLIT (284) 79
ID (285) 7 8 9 10 11 12 13 14 17 26 27 34 63 64 65 66
SINGLEQ (286)
DOUBLEQ (287)


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
classBegin (51)
    on left: 1 2 3 4, on right: 0
fieldDec (52)
    on left: 5 6, on right: 2 4 6
fieldArgs (53)
    on left: 7 8 9 10, on right: 5 6 8 10
methodDec (54)
    on left: 11 12 13 14, on right: 15 16
methodDecList (55)
    on left: 15 16, on right: 2 3 16
methodArg (56)
    on left: 17, on right: 18 19
methodArgs (57)
    on left: 18 19, on right: 11 13 19
block (58)
    on left: 20 21 22 23, on right: 11 12 13 14 32 33 34 39
varDecl (59)
    on left: 24 25, on right: 21 23 25
blockVars (60)
    on left: 26 27, on right: 24 25 27
statementContents (61)
    on left: 28 29 30 31 32 33 34 35 36 37 38 39, on right: 40 41
statement (62)
    on left: 40 41, on right: 22 23 41
type (63)
    on left: 42 43, on right: 5 6 11 12 17 24 25
expr (64)
    on left: 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
    62, on right: 28 29 30 32 33 34 36 47 48 49 50 51 52 53 54 55 56
    57 58 59 60 61 62 64 69 71 73 74
location (65)
    on left: 63 64, on right: 28 29 30 44
methodcall (66)
    on left: 65 66 67 68, on right: 31 45
calloutArgsList (67)
    on left: 69 70 71 72, on right: 67 71 72
arguments (68)
    on left: 73 74, on right: 66 74
literal (69)
    on left: 75 76 77, on right: 46
intlit (70)
    on left: 78 79, on right: 9 10 75
boollit (71)
    on left: 80 81, on right: 76
stringlit (72)
    on left: 82, on right: 67 68 70 72 77


State 0

    0 $accept: . classBegin $end
    1 classBegin: . CLASS PROGRAM '{' '}'
    2           | . CLASS PROGRAM '{' fieldDec methodDecList '}'
    3           | . CLASS PROGRAM '{' methodDecList '}'
    4           | . CLASS PROGRAM '{' fieldDec '}'

    CLASS  shift, and go to state 1

    classBegin  go to state 2


State 1

    1 classBegin: CLASS . PROGRAM '{' '}'
    2           | CLASS . PROGRAM '{' fieldDec methodDecList '}'
    3           | CLASS . PROGRAM '{' methodDecList '}'
    4           | CLASS . PROGRAM '{' fieldDec '}'

    PROGRAM  shift, and go to state 3


State 2

    0 $accept: classBegin . $end

    $end  shift, and go to state 4


State 3

    1 classBegin: CLASS PROGRAM . '{' '}'
    2           | CLASS PROGRAM . '{' fieldDec methodDecList '}'
    3           | CLASS PROGRAM . '{' methodDecList '}'
    4           | CLASS PROGRAM . '{' fieldDec '}'

    '{'  shift, and go to state 5


State 4

    0 $accept: classBegin $end .

    $default  accept


State 5

    1 classBegin: CLASS PROGRAM '{' . '}'
    2           | CLASS PROGRAM '{' . fieldDec methodDecList '}'
    3           | CLASS PROGRAM '{' . methodDecList '}'
    4           | CLASS PROGRAM '{' . fieldDec '}'
    5 fieldDec: . type fieldArgs ';'
    6         | . fieldDec type fieldArgs ';'
   11 methodDec: . type ID '(' methodArgs ')' block
   12          | . type ID '(' ')' block
   13          | . VOID ID '(' methodArgs ')' block
   14          | . VOID ID '(' ')' block
   15 methodDecList: . methodDec
   16              | . methodDecList methodDec
   42 type: . INT
   43     | . BOOLEAN

    BOOLEAN  shift, and go to state 6
    INT      shift, and go to state 7
    VOID     shift, and go to state 8
    '}'      shift, and go to state 9

    fieldDec       go to state 10
    methodDec      go to state 11
    methodDecList  go to state 12
    type           go to state 13


State 6

   43 type: BOOLEAN .

    $default  reduce using rule 43 (type)


State 7

   42 type: INT .

    $default  reduce using rule 42 (type)


State 8

   13 methodDec: VOID . ID '(' methodArgs ')' block
   14          | VOID . ID '(' ')' block

    ID  shift, and go to state 14


State 9

    1 classBegin: CLASS PROGRAM '{' '}' .

    $default  reduce using rule 1 (classBegin)


State 10

    2 classBegin: CLASS PROGRAM '{' fieldDec . methodDecList '}'
    4           | CLASS PROGRAM '{' fieldDec . '}'
    6 fieldDec: fieldDec . type fieldArgs ';'
   11 methodDec: . type ID '(' methodArgs ')' block
   12          | . type ID '(' ')' block
   13          | . VOID ID '(' methodArgs ')' block
   14          | . VOID ID '(' ')' block
   15 methodDecList: . methodDec
   16              | . methodDecList methodDec
   42 type: . INT
   43     | . BOOLEAN

    BOOLEAN  shift, and go to state 6
    INT      shift, and go to state 7
    VOID     shift, and go to state 8
    '}'      shift, and go to state 15

    methodDec      go to state 11
    methodDecList  go to state 16
    type           go to state 17


State 11

   15 methodDecList: methodDec .

    $default  reduce using rule 15 (methodDecList)


State 12

    3 classBegin: CLASS PROGRAM '{' methodDecList . '}'
   11 methodDec: . type ID '(' methodArgs ')' block
   12          | . type ID '(' ')' block
   13          | . VOID ID '(' methodArgs ')' block
   14          | . VOID ID '(' ')' block
   16 methodDecList: methodDecList . methodDec
   42 type: . INT
   43     | . BOOLEAN

    BOOLEAN  shift, and go to state 6
    INT      shift, and go to state 7
    VOID     shift, and go to state 8
    '}'      shift, and go to state 18

    methodDec  go to state 19
    type       go to state 20


State 13

    5 fieldDec: type . fieldArgs ';'
    7 fieldArgs: . ID
    8          | . ID ',' fieldArgs
    9          | . ID '[' intlit ']'
   10          | . ID '[' intlit ']' ',' fieldArgs
   11 methodDec: type . ID '(' methodArgs ')' block
   12          | type . ID '(' ')' block

    ID  shift, and go to state 21

    fieldArgs  go to state 22


State 14

   13 methodDec: VOID ID . '(' methodArgs ')' block
   14          | VOID ID . '(' ')' block

    '('  shift, and go to state 23


State 15

    4 classBegin: CLASS PROGRAM '{' fieldDec '}' .

    $default  reduce using rule 4 (classBegin)


State 16

    2 classBegin: CLASS PROGRAM '{' fieldDec methodDecList . '}'
   11 methodDec: . type ID '(' methodArgs ')' block
   12          | . type ID '(' ')' block
   13          | . VOID ID '(' methodArgs ')' block
   14          | . VOID ID '(' ')' block
   16 methodDecList: methodDecList . methodDec
   42 type: . INT
   43     | . BOOLEAN

    BOOLEAN  shift, and go to state 6
    INT      shift, and go to state 7
    VOID     shift, and go to state 8
    '}'      shift, and go to state 24

    methodDec  go to state 19
    type       go to state 20


State 17

    6 fieldDec: fieldDec type . fieldArgs ';'
    7 fieldArgs: . ID
    8          | . ID ',' fieldArgs
    9          | . ID '[' intlit ']'
   10          | . ID '[' intlit ']' ',' fieldArgs
   11 methodDec: type . ID '(' methodArgs ')' block
   12          | type . ID '(' ')' block

    ID  shift, and go to state 21

    fieldArgs  go to state 25


State 18

    3 classBegin: CLASS PROGRAM '{' methodDecList '}' .

    $default  reduce using rule 3 (classBegin)


State 19

   16 methodDecList: methodDecList methodDec .

    $default  reduce using rule 16 (methodDecList)


State 20

   11 methodDec: type . ID '(' methodArgs ')' block
   12          | type . ID '(' ')' block

    ID  shift, and go to state 26


State 21

    7 fieldArgs: ID .  [';']
    8          | ID . ',' fieldArgs
    9          | ID . '[' intlit ']'
   10          | ID . '[' intlit ']' ',' fieldArgs
   11 methodDec: type ID . '(' methodArgs ')' block
   12          | type ID . '(' ')' block

    '('  shift, and go to state 27
    '['  shift, and go to state 28
    ','  shift, and go to state 29

    $default  reduce using rule 7 (fieldArgs)


State 22

    5 fieldDec: type fieldArgs . ';'

    ';'  shift, and go to state 30


State 23

   13 methodDec: VOID ID '(' . methodArgs ')' block
   14          | VOID ID '(' . ')' block
   17 methodArg: . type ID
   18 methodArgs: . methodArg
   19           | . methodArg ',' methodArgs
   42 type: . INT
   43     | . BOOLEAN

    BOOLEAN  shift, and go to state 6
    INT      shift, and go to state 7
    ')'      shift, and go to state 31

    methodArg   go to state 32
    methodArgs  go to state 33
    type        go to state 34


State 24

    2 classBegin: CLASS PROGRAM '{' fieldDec methodDecList '}' .

    $default  reduce using rule 2 (classBegin)


State 25

    6 fieldDec: fieldDec type fieldArgs . ';'

    ';'  shift, and go to state 35


State 26

   11 methodDec: type ID . '(' methodArgs ')' block
   12          | type ID . '(' ')' block

    '('  shift, and go to state 27


State 27

   11 methodDec: type ID '(' . methodArgs ')' block
   12          | type ID '(' . ')' block
   17 methodArg: . type ID
   18 methodArgs: . methodArg
   19           | . methodArg ',' methodArgs
   42 type: . INT
   43     | . BOOLEAN

    BOOLEAN  shift, and go to state 6
    INT      shift, and go to state 7
    ')'      shift, and go to state 36

    methodArg   go to state 32
    methodArgs  go to state 37
    type        go to state 34


State 28

    9 fieldArgs: ID '[' . intlit ']'
   10          | ID '[' . intlit ']' ',' fieldArgs
   78 intlit: . DECLIT
   79       | . HEXLIT

    DECLIT  shift, and go to state 38
    HEXLIT  shift, and go to state 39

    intlit  go to state 40


State 29

    7 fieldArgs: . ID
    8          | . ID ',' fieldArgs
    8          | ID ',' . fieldArgs
    9          | . ID '[' intlit ']'
   10          | . ID '[' intlit ']' ',' fieldArgs

    ID  shift, and go to state 41

    fieldArgs  go to state 42


State 30

    5 fieldDec: type fieldArgs ';' .

    $default  reduce using rule 5 (fieldDec)


State 31

   14 methodDec: VOID ID '(' ')' . block
   20 block: . '{' '}'
   21      | . '{' varDecl '}'
   22      | . '{' statement '}'
   23      | . '{' varDecl statement '}'

    '{'  shift, and go to state 43

    block  go to state 44


State 32

   18 methodArgs: methodArg .  [')']
   19           | methodArg . ',' methodArgs

    ','  shift, and go to state 45

    $default  reduce using rule 18 (methodArgs)


State 33

   13 methodDec: VOID ID '(' methodArgs . ')' block

    ')'  shift, and go to state 46


State 34

   17 methodArg: type . ID

    ID  shift, and go to state 47


State 35

    6 fieldDec: fieldDec type fieldArgs ';' .

    $default  reduce using rule 6 (fieldDec)


State 36

   12 methodDec: type ID '(' ')' . block
   20 block: . '{' '}'
   21      | . '{' varDecl '}'
   22      | . '{' statement '}'
   23      | . '{' varDecl statement '}'

    '{'  shift, and go to state 43

    block  go to state 48


State 37

   11 methodDec: type ID '(' methodArgs . ')' block

    ')'  shift, and go to state 49


State 38

   78 intlit: DECLIT .

    $default  reduce using rule 78 (intlit)


State 39

   79 intlit: HEXLIT .

    $default  reduce using rule 79 (intlit)


State 40

    9 fieldArgs: ID '[' intlit . ']'
   10          | ID '[' intlit . ']' ',' fieldArgs

    ']'  shift, and go to state 50


State 41

    7 fieldArgs: ID .  [';']
    8          | ID . ',' fieldArgs
    9          | ID . '[' intlit ']'
   10          | ID . '[' intlit ']' ',' fieldArgs

    '['  shift, and go to state 28
    ','  shift, and go to state 29

    $default  reduce using rule 7 (fieldArgs)


State 42

    8 fieldArgs: ID ',' fieldArgs .

    $default  reduce using rule 8 (fieldArgs)


State 43

   20 block: . '{' '}'
   20      | '{' . '}'
   21      | . '{' varDecl '}'
   21      | '{' . varDecl '}'
   22      | . '{' statement '}'
   22      | '{' . statement '}'
   23      | . '{' varDecl statement '}'
   23      | '{' . varDecl statement '}'
   24 varDecl: . type blockVars ';'
   25        | . type blockVars ';' varDecl
   28 statementContents: . location '=' expr ';'
   29                  | . location PLUSEQ expr ';'
   30                  | . location MINUSEQ expr ';'
   31                  | . methodcall ';'
   32                  | . IF '(' expr ')' block
   33                  | . IF '(' expr ')' block ELSE block
   34                  | . FOR ID '=' expr ',' expr block
   35                  | . RETURN ';'
   36                  | . RETURN expr ';'
   37                  | . BREAK ';'
   38                  | . CONTINUE ';'
   39                  | . block
   40 statement: . statementContents
   41          | . statement statementContents
   42 type: . INT
   43     | . BOOLEAN
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 51
    CALLOUT   shift, and go to state 52
    CONTINUE  shift, and go to state 53
    FOR       shift, and go to state 54
    INT       shift, and go to state 7
    IF        shift, and go to state 55
    RETURN    shift, and go to state 56
    ID        shift, and go to state 57
    '{'       shift, and go to state 43
    '}'       shift, and go to state 58

    block              go to state 59
    varDecl            go to state 60
    statementContents  go to state 61
    statement          go to state 62
    type               go to state 63
    location           go to state 64
    methodcall         go to state 65


State 44

   14 methodDec: VOID ID '(' ')' block .

    $default  reduce using rule 14 (methodDec)


State 45

   17 methodArg: . type ID
   18 methodArgs: . methodArg
   19           | . methodArg ',' methodArgs
   19           | methodArg ',' . methodArgs
   42 type: . INT
   43     | . BOOLEAN

    BOOLEAN  shift, and go to state 6
    INT      shift, and go to state 7

    methodArg   go to state 32
    methodArgs  go to state 66
    type        go to state 34


State 46

   13 methodDec: VOID ID '(' methodArgs ')' . block
   20 block: . '{' '}'
   21      | . '{' varDecl '}'
   22      | . '{' statement '}'
   23      | . '{' varDecl statement '}'

    '{'  shift, and go to state 43

    block  go to state 67


State 47

   17 methodArg: type ID .

    $default  reduce using rule 17 (methodArg)


State 48

   12 methodDec: type ID '(' ')' block .

    $default  reduce using rule 12 (methodDec)


State 49

   11 methodDec: type ID '(' methodArgs ')' . block
   20 block: . '{' '}'
   21      | . '{' varDecl '}'
   22      | . '{' statement '}'
   23      | . '{' varDecl statement '}'

    '{'  shift, and go to state 43

    block  go to state 68


State 50

    9 fieldArgs: ID '[' intlit ']' .  [';']
   10          | ID '[' intlit ']' . ',' fieldArgs

    ','  shift, and go to state 69

    $default  reduce using rule 9 (fieldArgs)


State 51

   37 statementContents: BREAK . ';'

    ';'  shift, and go to state 70


State 52

   67 methodcall: CALLOUT . '(' stringlit ',' calloutArgsList ')'
   68           | CALLOUT . '(' stringlit ')'

    '('  shift, and go to state 71


State 53

   38 statementContents: CONTINUE . ';'

    ';'  shift, and go to state 72


State 54

   34 statementContents: FOR . ID '=' expr ',' expr block

    ID  shift, and go to state 73


State 55

   32 statementContents: IF . '(' expr ')' block
   33                  | IF . '(' expr ')' block ELSE block

    '('  shift, and go to state 74


State 56

   35 statementContents: RETURN . ';'
   36                  | RETURN . expr ';'
   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80
    ';'        shift, and go to state 81

    expr        go to state 82
    location    go to state 83
    methodcall  go to state 84
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 57

   63 location: ID .  ['=', PLUSEQ, MINUSEQ, AND, OR, EE, NE, '<', '>', LE, GE, '+', '-', '*', '/', '%', ')', ']', '{', ',', ';']
   64         | ID . '[' expr ']'
   65 methodcall: ID . '(' ')'
   66           | ID . '(' arguments ')'

    '('  shift, and go to state 89
    '['  shift, and go to state 90

    $default  reduce using rule 63 (location)


State 58

   20 block: '{' '}' .

    $default  reduce using rule 20 (block)


State 59

   39 statementContents: block .

    $default  reduce using rule 39 (statementContents)


State 60

   20 block: . '{' '}'
   21      | . '{' varDecl '}'
   21      | '{' varDecl . '}'
   22      | . '{' statement '}'
   23      | . '{' varDecl statement '}'
   23      | '{' varDecl . statement '}'
   28 statementContents: . location '=' expr ';'
   29                  | . location PLUSEQ expr ';'
   30                  | . location MINUSEQ expr ';'
   31                  | . methodcall ';'
   32                  | . IF '(' expr ')' block
   33                  | . IF '(' expr ')' block ELSE block
   34                  | . FOR ID '=' expr ',' expr block
   35                  | . RETURN ';'
   36                  | . RETURN expr ';'
   37                  | . BREAK ';'
   38                  | . CONTINUE ';'
   39                  | . block
   40 statement: . statementContents
   41          | . statement statementContents
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'

    BREAK     shift, and go to state 51
    CALLOUT   shift, and go to state 52
    CONTINUE  shift, and go to state 53
    FOR       shift, and go to state 54
    IF        shift, and go to state 55
    RETURN    shift, and go to state 56
    ID        shift, and go to state 57
    '{'       shift, and go to state 43
    '}'       shift, and go to state 91

    block              go to state 59
    statementContents  go to state 61
    statement          go to state 92
    location           go to state 64
    methodcall         go to state 65


State 61

   40 statement: statementContents .

    $default  reduce using rule 40 (statement)


State 62

   20 block: . '{' '}'
   21      | . '{' varDecl '}'
   22      | . '{' statement '}'
   22      | '{' statement . '}'
   23      | . '{' varDecl statement '}'
   28 statementContents: . location '=' expr ';'
   29                  | . location PLUSEQ expr ';'
   30                  | . location MINUSEQ expr ';'
   31                  | . methodcall ';'
   32                  | . IF '(' expr ')' block
   33                  | . IF '(' expr ')' block ELSE block
   34                  | . FOR ID '=' expr ',' expr block
   35                  | . RETURN ';'
   36                  | . RETURN expr ';'
   37                  | . BREAK ';'
   38                  | . CONTINUE ';'
   39                  | . block
   41 statement: statement . statementContents
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'

    BREAK     shift, and go to state 51
    CALLOUT   shift, and go to state 52
    CONTINUE  shift, and go to state 53
    FOR       shift, and go to state 54
    IF        shift, and go to state 55
    RETURN    shift, and go to state 56
    ID        shift, and go to state 57
    '{'       shift, and go to state 43
    '}'       shift, and go to state 93

    block              go to state 59
    statementContents  go to state 94
    location           go to state 64
    methodcall         go to state 65


State 63

   24 varDecl: type . blockVars ';'
   25        | type . blockVars ';' varDecl
   26 blockVars: . ID
   27          | . blockVars ',' ID

    ID  shift, and go to state 95

    blockVars  go to state 96


State 64

   28 statementContents: location . '=' expr ';'
   29                  | location . PLUSEQ expr ';'
   30                  | location . MINUSEQ expr ';'

    '='      shift, and go to state 97
    PLUSEQ   shift, and go to state 98
    MINUSEQ  shift, and go to state 99


State 65

   31 statementContents: methodcall . ';'

    ';'  shift, and go to state 100


State 66

   19 methodArgs: methodArg ',' methodArgs .

    $default  reduce using rule 19 (methodArgs)


State 67

   13 methodDec: VOID ID '(' methodArgs ')' block .

    $default  reduce using rule 13 (methodDec)


State 68

   11 methodDec: type ID '(' methodArgs ')' block .

    $default  reduce using rule 11 (methodDec)


State 69

    7 fieldArgs: . ID
    8          | . ID ',' fieldArgs
    9          | . ID '[' intlit ']'
   10          | . ID '[' intlit ']' ',' fieldArgs
   10          | ID '[' intlit ']' ',' . fieldArgs

    ID  shift, and go to state 41

    fieldArgs  go to state 101


State 70

   37 statementContents: BREAK ';' .

    $default  reduce using rule 37 (statementContents)


State 71

   67 methodcall: CALLOUT '(' . stringlit ',' calloutArgsList ')'
   68           | CALLOUT '(' . stringlit ')'
   82 stringlit: . STRINGLIT

    STRINGLIT  shift, and go to state 79

    stringlit  go to state 102


State 72

   38 statementContents: CONTINUE ';' .

    $default  reduce using rule 38 (statementContents)


State 73

   34 statementContents: FOR ID . '=' expr ',' expr block

    '='  shift, and go to state 103


State 74

   32 statementContents: IF '(' . expr ')' block
   33                  | IF '(' . expr ')' block ELSE block
   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr        go to state 104
    location    go to state 83
    methodcall  go to state 84
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 75

   81 boollit: FALSE .

    $default  reduce using rule 81 (boollit)


State 76

   80 boollit: TRUE .

    $default  reduce using rule 80 (boollit)


State 77

   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   47     | '-' . expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr        go to state 105
    location    go to state 83
    methodcall  go to state 84
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 78

   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   48     | '!' . expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr        go to state 106
    location    go to state 83
    methodcall  go to state 84
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 79

   82 stringlit: STRINGLIT .

    $default  reduce using rule 82 (stringlit)


State 80

   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   62     | '(' . expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr        go to state 107
    location    go to state 83
    methodcall  go to state 84
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 81

   35 statementContents: RETURN ';' .

    $default  reduce using rule 35 (statementContents)


State 82

   36 statementContents: RETURN expr . ';'
   49 expr: expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . LE expr
   57     | expr . GE expr
   58     | expr . EE expr
   59     | expr . NE expr
   60     | expr . AND expr
   61     | expr . OR expr

    AND  shift, and go to state 108
    OR   shift, and go to state 109
    EE   shift, and go to state 110
    NE   shift, and go to state 111
    '<'  shift, and go to state 112
    '>'  shift, and go to state 113
    LE   shift, and go to state 114
    GE   shift, and go to state 115
    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120
    ';'  shift, and go to state 121


State 83

   44 expr: location .

    $default  reduce using rule 44 (expr)


State 84

   45 expr: methodcall .

    $default  reduce using rule 45 (expr)


State 85

   46 expr: literal .

    $default  reduce using rule 46 (expr)


State 86

   75 literal: intlit .

    $default  reduce using rule 75 (literal)


State 87

   76 literal: boollit .

    $default  reduce using rule 76 (literal)


State 88

   77 literal: stringlit .

    $default  reduce using rule 77 (literal)


State 89

   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   65           | ID '(' . ')'
   66           | . ID '(' arguments ')'
   66           | ID '(' . arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   73 arguments: . expr
   74          | . expr ',' arguments
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80
    ')'        shift, and go to state 122

    expr        go to state 123
    location    go to state 83
    methodcall  go to state 84
    arguments   go to state 124
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 90

   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   64         | ID '[' . expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr        go to state 125
    location    go to state 83
    methodcall  go to state 84
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 91

   21 block: '{' varDecl '}' .

    $default  reduce using rule 21 (block)


State 92

   20 block: . '{' '}'
   21      | . '{' varDecl '}'
   22      | . '{' statement '}'
   23      | . '{' varDecl statement '}'
   23      | '{' varDecl statement . '}'
   28 statementContents: . location '=' expr ';'
   29                  | . location PLUSEQ expr ';'
   30                  | . location MINUSEQ expr ';'
   31                  | . methodcall ';'
   32                  | . IF '(' expr ')' block
   33                  | . IF '(' expr ')' block ELSE block
   34                  | . FOR ID '=' expr ',' expr block
   35                  | . RETURN ';'
   36                  | . RETURN expr ';'
   37                  | . BREAK ';'
   38                  | . CONTINUE ';'
   39                  | . block
   41 statement: statement . statementContents
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'

    BREAK     shift, and go to state 51
    CALLOUT   shift, and go to state 52
    CONTINUE  shift, and go to state 53
    FOR       shift, and go to state 54
    IF        shift, and go to state 55
    RETURN    shift, and go to state 56
    ID        shift, and go to state 57
    '{'       shift, and go to state 43
    '}'       shift, and go to state 126

    block              go to state 59
    statementContents  go to state 94
    location           go to state 64
    methodcall         go to state 65


State 93

   22 block: '{' statement '}' .

    $default  reduce using rule 22 (block)


State 94

   41 statement: statement statementContents .

    $default  reduce using rule 41 (statement)


State 95

   26 blockVars: ID .

    $default  reduce using rule 26 (blockVars)


State 96

   24 varDecl: type blockVars . ';'
   25        | type blockVars . ';' varDecl
   27 blockVars: blockVars . ',' ID

    ','  shift, and go to state 127
    ';'  shift, and go to state 128


State 97

   28 statementContents: location '=' . expr ';'
   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr        go to state 129
    location    go to state 83
    methodcall  go to state 84
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 98

   29 statementContents: location PLUSEQ . expr ';'
   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr        go to state 130
    location    go to state 83
    methodcall  go to state 84
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 99

   30 statementContents: location MINUSEQ . expr ';'
   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr        go to state 131
    location    go to state 83
    methodcall  go to state 84
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 100

   31 statementContents: methodcall ';' .

    $default  reduce using rule 31 (statementContents)


State 101

   10 fieldArgs: ID '[' intlit ']' ',' fieldArgs .

    $default  reduce using rule 10 (fieldArgs)


State 102

   67 methodcall: CALLOUT '(' stringlit . ',' calloutArgsList ')'
   68           | CALLOUT '(' stringlit . ')'

    ')'  shift, and go to state 132
    ','  shift, and go to state 133


State 103

   34 statementContents: FOR ID '=' . expr ',' expr block
   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr        go to state 134
    location    go to state 83
    methodcall  go to state 84
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 104

   32 statementContents: IF '(' expr . ')' block
   33                  | IF '(' expr . ')' block ELSE block
   49 expr: expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . LE expr
   57     | expr . GE expr
   58     | expr . EE expr
   59     | expr . NE expr
   60     | expr . AND expr
   61     | expr . OR expr

    AND  shift, and go to state 108
    OR   shift, and go to state 109
    EE   shift, and go to state 110
    NE   shift, and go to state 111
    '<'  shift, and go to state 112
    '>'  shift, and go to state 113
    LE   shift, and go to state 114
    GE   shift, and go to state 115
    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120
    ')'  shift, and go to state 135


State 105

   47 expr: '-' expr .  [AND, OR, EE, NE, '<', '>', LE, GE, '+', '-', ')', ']', '{', ',', ';']
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . LE expr
   57     | expr . GE expr
   58     | expr . EE expr
   59     | expr . NE expr
   60     | expr . AND expr
   61     | expr . OR expr

    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120

    $default  reduce using rule 47 (expr)

    Conflict between rule 47 and token AND resolved as reduce (AND < '-').
    Conflict between rule 47 and token OR resolved as reduce (OR < '-').
    Conflict between rule 47 and token EE resolved as reduce (EE < '-').
    Conflict between rule 47 and token NE resolved as reduce (NE < '-').
    Conflict between rule 47 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 47 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 47 and token LE resolved as reduce (LE < '-').
    Conflict between rule 47 and token GE resolved as reduce (GE < '-').
    Conflict between rule 47 and token '+' resolved as reduce (%left '+').
    Conflict between rule 47 and token '-' resolved as reduce (%left '-').
    Conflict between rule 47 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 47 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 47 and token '%' resolved as shift ('-' < '%').


State 106

   48 expr: '!' expr .  [AND, OR, EE, NE, '<', '>', LE, GE, '+', '-', '*', '/', '%', ')', ']', '{', ',', ';']
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . LE expr
   57     | expr . GE expr
   58     | expr . EE expr
   59     | expr . NE expr
   60     | expr . AND expr
   61     | expr . OR expr

    $default  reduce using rule 48 (expr)

    Conflict between rule 48 and token AND resolved as reduce (AND < '!').
    Conflict between rule 48 and token OR resolved as reduce (OR < '!').
    Conflict between rule 48 and token EE resolved as reduce (EE < '!').
    Conflict between rule 48 and token NE resolved as reduce (NE < '!').
    Conflict between rule 48 and token '<' resolved as reduce ('<' < '!').
    Conflict between rule 48 and token '>' resolved as reduce ('>' < '!').
    Conflict between rule 48 and token LE resolved as reduce (LE < '!').
    Conflict between rule 48 and token GE resolved as reduce (GE < '!').
    Conflict between rule 48 and token '+' resolved as reduce ('+' < '!').
    Conflict between rule 48 and token '-' resolved as reduce ('-' < '!').
    Conflict between rule 48 and token '*' resolved as reduce ('*' < '!').
    Conflict between rule 48 and token '/' resolved as reduce ('/' < '!').
    Conflict between rule 48 and token '%' resolved as reduce ('%' < '!').


State 107

   49 expr: expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . LE expr
   57     | expr . GE expr
   58     | expr . EE expr
   59     | expr . NE expr
   60     | expr . AND expr
   61     | expr . OR expr
   62     | '(' expr . ')'

    AND  shift, and go to state 108
    OR   shift, and go to state 109
    EE   shift, and go to state 110
    NE   shift, and go to state 111
    '<'  shift, and go to state 112
    '>'  shift, and go to state 113
    LE   shift, and go to state 114
    GE   shift, and go to state 115
    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120
    ')'  shift, and go to state 136


State 108

   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   60     | expr AND . expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr        go to state 137
    location    go to state 83
    methodcall  go to state 84
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 109

   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   61     | expr OR . expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr        go to state 138
    location    go to state 83
    methodcall  go to state 84
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 110

   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   58     | expr EE . expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr        go to state 139
    location    go to state 83
    methodcall  go to state 84
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 111

   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   59     | expr NE . expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr        go to state 140
    location    go to state 83
    methodcall  go to state 84
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 112

   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   54     | expr '<' . expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr        go to state 141
    location    go to state 83
    methodcall  go to state 84
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 113

   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   55     | expr '>' . expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr        go to state 142
    location    go to state 83
    methodcall  go to state 84
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 114

   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   56     | expr LE . expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr        go to state 143
    location    go to state 83
    methodcall  go to state 84
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 115

   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   57     | expr GE . expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr        go to state 144
    location    go to state 83
    methodcall  go to state 84
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 116

   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   52     | expr '+' . expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr        go to state 145
    location    go to state 83
    methodcall  go to state 84
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 117

   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   53     | expr '-' . expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr        go to state 146
    location    go to state 83
    methodcall  go to state 84
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 118

   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   49     | expr '*' . expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr        go to state 147
    location    go to state 83
    methodcall  go to state 84
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 119

   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   50     | expr '/' . expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr        go to state 148
    location    go to state 83
    methodcall  go to state 84
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 120

   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   51     | expr '%' . expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr        go to state 149
    location    go to state 83
    methodcall  go to state 84
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 121

   36 statementContents: RETURN expr ';' .

    $default  reduce using rule 36 (statementContents)


State 122

   65 methodcall: ID '(' ')' .

    $default  reduce using rule 65 (methodcall)


State 123

   49 expr: expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . LE expr
   57     | expr . GE expr
   58     | expr . EE expr
   59     | expr . NE expr
   60     | expr . AND expr
   61     | expr . OR expr
   73 arguments: expr .  [')']
   74          | expr . ',' arguments

    AND  shift, and go to state 108
    OR   shift, and go to state 109
    EE   shift, and go to state 110
    NE   shift, and go to state 111
    '<'  shift, and go to state 112
    '>'  shift, and go to state 113
    LE   shift, and go to state 114
    GE   shift, and go to state 115
    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120
    ','  shift, and go to state 150

    $default  reduce using rule 73 (arguments)


State 124

   66 methodcall: ID '(' arguments . ')'

    ')'  shift, and go to state 151


State 125

   49 expr: expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . LE expr
   57     | expr . GE expr
   58     | expr . EE expr
   59     | expr . NE expr
   60     | expr . AND expr
   61     | expr . OR expr
   64 location: ID '[' expr . ']'

    AND  shift, and go to state 108
    OR   shift, and go to state 109
    EE   shift, and go to state 110
    NE   shift, and go to state 111
    '<'  shift, and go to state 112
    '>'  shift, and go to state 113
    LE   shift, and go to state 114
    GE   shift, and go to state 115
    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120
    ']'  shift, and go to state 152


State 126

   23 block: '{' varDecl statement '}' .

    $default  reduce using rule 23 (block)


State 127

   27 blockVars: blockVars ',' . ID

    ID  shift, and go to state 153


State 128

   24 varDecl: . type blockVars ';'
   24        | type blockVars ';' .  [BREAK, CALLOUT, CONTINUE, FOR, IF, RETURN, ID, '{', '}']
   25        | . type blockVars ';' varDecl
   25        | type blockVars ';' . varDecl
   42 type: . INT
   43     | . BOOLEAN

    BOOLEAN  shift, and go to state 6
    INT      shift, and go to state 7

    $default  reduce using rule 24 (varDecl)

    varDecl  go to state 154
    type     go to state 63


State 129

   28 statementContents: location '=' expr . ';'
   49 expr: expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . LE expr
   57     | expr . GE expr
   58     | expr . EE expr
   59     | expr . NE expr
   60     | expr . AND expr
   61     | expr . OR expr

    AND  shift, and go to state 108
    OR   shift, and go to state 109
    EE   shift, and go to state 110
    NE   shift, and go to state 111
    '<'  shift, and go to state 112
    '>'  shift, and go to state 113
    LE   shift, and go to state 114
    GE   shift, and go to state 115
    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120
    ';'  shift, and go to state 155


State 130

   29 statementContents: location PLUSEQ expr . ';'
   49 expr: expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . LE expr
   57     | expr . GE expr
   58     | expr . EE expr
   59     | expr . NE expr
   60     | expr . AND expr
   61     | expr . OR expr

    AND  shift, and go to state 108
    OR   shift, and go to state 109
    EE   shift, and go to state 110
    NE   shift, and go to state 111
    '<'  shift, and go to state 112
    '>'  shift, and go to state 113
    LE   shift, and go to state 114
    GE   shift, and go to state 115
    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120
    ';'  shift, and go to state 156


State 131

   30 statementContents: location MINUSEQ expr . ';'
   49 expr: expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . LE expr
   57     | expr . GE expr
   58     | expr . EE expr
   59     | expr . NE expr
   60     | expr . AND expr
   61     | expr . OR expr

    AND  shift, and go to state 108
    OR   shift, and go to state 109
    EE   shift, and go to state 110
    NE   shift, and go to state 111
    '<'  shift, and go to state 112
    '>'  shift, and go to state 113
    LE   shift, and go to state 114
    GE   shift, and go to state 115
    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120
    ';'  shift, and go to state 157


State 132

   68 methodcall: CALLOUT '(' stringlit ')' .

    $default  reduce using rule 68 (methodcall)


State 133

   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   67           | CALLOUT '(' stringlit ',' . calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   69 calloutArgsList: . expr
   70                | . stringlit
   71                | . expr ',' calloutArgsList
   72                | . stringlit ',' calloutArgsList
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr             go to state 158
    location         go to state 83
    methodcall       go to state 84
    calloutArgsList  go to state 159
    literal          go to state 85
    intlit           go to state 86
    boollit          go to state 87
    stringlit        go to state 160


State 134

   34 statementContents: FOR ID '=' expr . ',' expr block
   49 expr: expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . LE expr
   57     | expr . GE expr
   58     | expr . EE expr
   59     | expr . NE expr
   60     | expr . AND expr
   61     | expr . OR expr

    AND  shift, and go to state 108
    OR   shift, and go to state 109
    EE   shift, and go to state 110
    NE   shift, and go to state 111
    '<'  shift, and go to state 112
    '>'  shift, and go to state 113
    LE   shift, and go to state 114
    GE   shift, and go to state 115
    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120
    ','  shift, and go to state 161


State 135

   20 block: . '{' '}'
   21      | . '{' varDecl '}'
   22      | . '{' statement '}'
   23      | . '{' varDecl statement '}'
   32 statementContents: IF '(' expr ')' . block
   33                  | IF '(' expr ')' . block ELSE block

    '{'  shift, and go to state 43

    block  go to state 162


State 136

   62 expr: '(' expr ')' .

    $default  reduce using rule 62 (expr)


State 137

   49 expr: expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . LE expr
   57     | expr . GE expr
   58     | expr . EE expr
   59     | expr . NE expr
   60     | expr . AND expr
   60     | expr AND expr .  [AND, OR, ')', ']', '{', ',', ';']
   61     | expr . OR expr

    EE   shift, and go to state 110
    NE   shift, and go to state 111
    '<'  shift, and go to state 112
    '>'  shift, and go to state 113
    LE   shift, and go to state 114
    GE   shift, and go to state 115
    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120

    $default  reduce using rule 60 (expr)

    Conflict between rule 60 and token AND resolved as reduce (%left AND).
    Conflict between rule 60 and token OR resolved as reduce (%left OR).
    Conflict between rule 60 and token EE resolved as shift (AND < EE).
    Conflict between rule 60 and token NE resolved as shift (AND < NE).
    Conflict between rule 60 and token '<' resolved as shift (AND < '<').
    Conflict between rule 60 and token '>' resolved as shift (AND < '>').
    Conflict between rule 60 and token LE resolved as shift (AND < LE).
    Conflict between rule 60 and token GE resolved as shift (AND < GE).
    Conflict between rule 60 and token '+' resolved as shift (AND < '+').
    Conflict between rule 60 and token '-' resolved as shift (AND < '-').
    Conflict between rule 60 and token '*' resolved as shift (AND < '*').
    Conflict between rule 60 and token '/' resolved as shift (AND < '/').
    Conflict between rule 60 and token '%' resolved as shift (AND < '%').


State 138

   49 expr: expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . LE expr
   57     | expr . GE expr
   58     | expr . EE expr
   59     | expr . NE expr
   60     | expr . AND expr
   61     | expr . OR expr
   61     | expr OR expr .  [AND, OR, ')', ']', '{', ',', ';']

    EE   shift, and go to state 110
    NE   shift, and go to state 111
    '<'  shift, and go to state 112
    '>'  shift, and go to state 113
    LE   shift, and go to state 114
    GE   shift, and go to state 115
    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120

    $default  reduce using rule 61 (expr)

    Conflict between rule 61 and token AND resolved as reduce (%left AND).
    Conflict between rule 61 and token OR resolved as reduce (%left OR).
    Conflict between rule 61 and token EE resolved as shift (OR < EE).
    Conflict between rule 61 and token NE resolved as shift (OR < NE).
    Conflict between rule 61 and token '<' resolved as shift (OR < '<').
    Conflict between rule 61 and token '>' resolved as shift (OR < '>').
    Conflict between rule 61 and token LE resolved as shift (OR < LE).
    Conflict between rule 61 and token GE resolved as shift (OR < GE).
    Conflict between rule 61 and token '+' resolved as shift (OR < '+').
    Conflict between rule 61 and token '-' resolved as shift (OR < '-').
    Conflict between rule 61 and token '*' resolved as shift (OR < '*').
    Conflict between rule 61 and token '/' resolved as shift (OR < '/').
    Conflict between rule 61 and token '%' resolved as shift (OR < '%').


State 139

   49 expr: expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . LE expr
   57     | expr . GE expr
   58     | expr . EE expr
   58     | expr EE expr .  [AND, OR, EE, NE, ')', ']', '{', ',', ';']
   59     | expr . NE expr
   60     | expr . AND expr
   61     | expr . OR expr

    '<'  shift, and go to state 112
    '>'  shift, and go to state 113
    LE   shift, and go to state 114
    GE   shift, and go to state 115
    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120

    $default  reduce using rule 58 (expr)

    Conflict between rule 58 and token AND resolved as reduce (AND < EE).
    Conflict between rule 58 and token OR resolved as reduce (OR < EE).
    Conflict between rule 58 and token EE resolved as reduce (%left EE).
    Conflict between rule 58 and token NE resolved as reduce (%left NE).
    Conflict between rule 58 and token '<' resolved as shift (EE < '<').
    Conflict between rule 58 and token '>' resolved as shift (EE < '>').
    Conflict between rule 58 and token LE resolved as shift (EE < LE).
    Conflict between rule 58 and token GE resolved as shift (EE < GE).
    Conflict between rule 58 and token '+' resolved as shift (EE < '+').
    Conflict between rule 58 and token '-' resolved as shift (EE < '-').
    Conflict between rule 58 and token '*' resolved as shift (EE < '*').
    Conflict between rule 58 and token '/' resolved as shift (EE < '/').
    Conflict between rule 58 and token '%' resolved as shift (EE < '%').


State 140

   49 expr: expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . LE expr
   57     | expr . GE expr
   58     | expr . EE expr
   59     | expr . NE expr
   59     | expr NE expr .  [AND, OR, EE, NE, ')', ']', '{', ',', ';']
   60     | expr . AND expr
   61     | expr . OR expr

    '<'  shift, and go to state 112
    '>'  shift, and go to state 113
    LE   shift, and go to state 114
    GE   shift, and go to state 115
    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120

    $default  reduce using rule 59 (expr)

    Conflict between rule 59 and token AND resolved as reduce (AND < NE).
    Conflict between rule 59 and token OR resolved as reduce (OR < NE).
    Conflict between rule 59 and token EE resolved as reduce (%left EE).
    Conflict between rule 59 and token NE resolved as reduce (%left NE).
    Conflict between rule 59 and token '<' resolved as shift (NE < '<').
    Conflict between rule 59 and token '>' resolved as shift (NE < '>').
    Conflict between rule 59 and token LE resolved as shift (NE < LE).
    Conflict between rule 59 and token GE resolved as shift (NE < GE).
    Conflict between rule 59 and token '+' resolved as shift (NE < '+').
    Conflict between rule 59 and token '-' resolved as shift (NE < '-').
    Conflict between rule 59 and token '*' resolved as shift (NE < '*').
    Conflict between rule 59 and token '/' resolved as shift (NE < '/').
    Conflict between rule 59 and token '%' resolved as shift (NE < '%').


State 141

   49 expr: expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '<' expr
   54     | expr '<' expr .  [AND, OR, EE, NE, '<', '>', LE, GE, ')', ']', '{', ',', ';']
   55     | expr . '>' expr
   56     | expr . LE expr
   57     | expr . GE expr
   58     | expr . EE expr
   59     | expr . NE expr
   60     | expr . AND expr
   61     | expr . OR expr

    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120

    $default  reduce using rule 54 (expr)

    Conflict between rule 54 and token AND resolved as reduce (AND < '<').
    Conflict between rule 54 and token OR resolved as reduce (OR < '<').
    Conflict between rule 54 and token EE resolved as reduce (EE < '<').
    Conflict between rule 54 and token NE resolved as reduce (NE < '<').
    Conflict between rule 54 and token '<' resolved as reduce (%left '<').
    Conflict between rule 54 and token '>' resolved as reduce (%left '>').
    Conflict between rule 54 and token LE resolved as reduce (%left LE).
    Conflict between rule 54 and token GE resolved as reduce (%left GE).
    Conflict between rule 54 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 54 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 54 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 54 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 54 and token '%' resolved as shift ('<' < '%').


State 142

   49 expr: expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   55     | expr '>' expr .  [AND, OR, EE, NE, '<', '>', LE, GE, ')', ']', '{', ',', ';']
   56     | expr . LE expr
   57     | expr . GE expr
   58     | expr . EE expr
   59     | expr . NE expr
   60     | expr . AND expr
   61     | expr . OR expr

    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120

    $default  reduce using rule 55 (expr)

    Conflict between rule 55 and token AND resolved as reduce (AND < '>').
    Conflict between rule 55 and token OR resolved as reduce (OR < '>').
    Conflict between rule 55 and token EE resolved as reduce (EE < '>').
    Conflict between rule 55 and token NE resolved as reduce (NE < '>').
    Conflict between rule 55 and token '<' resolved as reduce (%left '<').
    Conflict between rule 55 and token '>' resolved as reduce (%left '>').
    Conflict between rule 55 and token LE resolved as reduce (%left LE).
    Conflict between rule 55 and token GE resolved as reduce (%left GE).
    Conflict between rule 55 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 55 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 55 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 55 and token '/' resolved as shift ('>' < '/').
    Conflict between rule 55 and token '%' resolved as shift ('>' < '%').


State 143

   49 expr: expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . LE expr
   56     | expr LE expr .  [AND, OR, EE, NE, '<', '>', LE, GE, ')', ']', '{', ',', ';']
   57     | expr . GE expr
   58     | expr . EE expr
   59     | expr . NE expr
   60     | expr . AND expr
   61     | expr . OR expr

    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120

    $default  reduce using rule 56 (expr)

    Conflict between rule 56 and token AND resolved as reduce (AND < LE).
    Conflict between rule 56 and token OR resolved as reduce (OR < LE).
    Conflict between rule 56 and token EE resolved as reduce (EE < LE).
    Conflict between rule 56 and token NE resolved as reduce (NE < LE).
    Conflict between rule 56 and token '<' resolved as reduce (%left '<').
    Conflict between rule 56 and token '>' resolved as reduce (%left '>').
    Conflict between rule 56 and token LE resolved as reduce (%left LE).
    Conflict between rule 56 and token GE resolved as reduce (%left GE).
    Conflict between rule 56 and token '+' resolved as shift (LE < '+').
    Conflict between rule 56 and token '-' resolved as shift (LE < '-').
    Conflict between rule 56 and token '*' resolved as shift (LE < '*').
    Conflict between rule 56 and token '/' resolved as shift (LE < '/').
    Conflict between rule 56 and token '%' resolved as shift (LE < '%').


State 144

   49 expr: expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . LE expr
   57     | expr . GE expr
   57     | expr GE expr .  [AND, OR, EE, NE, '<', '>', LE, GE, ')', ']', '{', ',', ';']
   58     | expr . EE expr
   59     | expr . NE expr
   60     | expr . AND expr
   61     | expr . OR expr

    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120

    $default  reduce using rule 57 (expr)

    Conflict between rule 57 and token AND resolved as reduce (AND < GE).
    Conflict between rule 57 and token OR resolved as reduce (OR < GE).
    Conflict between rule 57 and token EE resolved as reduce (EE < GE).
    Conflict between rule 57 and token NE resolved as reduce (NE < GE).
    Conflict between rule 57 and token '<' resolved as reduce (%left '<').
    Conflict between rule 57 and token '>' resolved as reduce (%left '>').
    Conflict between rule 57 and token LE resolved as reduce (%left LE).
    Conflict between rule 57 and token GE resolved as reduce (%left GE).
    Conflict between rule 57 and token '+' resolved as shift (GE < '+').
    Conflict between rule 57 and token '-' resolved as shift (GE < '-').
    Conflict between rule 57 and token '*' resolved as shift (GE < '*').
    Conflict between rule 57 and token '/' resolved as shift (GE < '/').
    Conflict between rule 57 and token '%' resolved as shift (GE < '%').


State 145

   49 expr: expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . '+' expr
   52     | expr '+' expr .  [AND, OR, EE, NE, '<', '>', LE, GE, '+', '-', ')', ']', '{', ',', ';']
   53     | expr . '-' expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . LE expr
   57     | expr . GE expr
   58     | expr . EE expr
   59     | expr . NE expr
   60     | expr . AND expr
   61     | expr . OR expr

    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120

    $default  reduce using rule 52 (expr)

    Conflict between rule 52 and token AND resolved as reduce (AND < '+').
    Conflict between rule 52 and token OR resolved as reduce (OR < '+').
    Conflict between rule 52 and token EE resolved as reduce (EE < '+').
    Conflict between rule 52 and token NE resolved as reduce (NE < '+').
    Conflict between rule 52 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 52 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 52 and token LE resolved as reduce (LE < '+').
    Conflict between rule 52 and token GE resolved as reduce (GE < '+').
    Conflict between rule 52 and token '+' resolved as reduce (%left '+').
    Conflict between rule 52 and token '-' resolved as reduce (%left '-').
    Conflict between rule 52 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 52 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 52 and token '%' resolved as shift ('+' < '%').


State 146

   49 expr: expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . '+' expr
   53     | expr . '-' expr
   53     | expr '-' expr .  [AND, OR, EE, NE, '<', '>', LE, GE, '+', '-', ')', ']', '{', ',', ';']
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . LE expr
   57     | expr . GE expr
   58     | expr . EE expr
   59     | expr . NE expr
   60     | expr . AND expr
   61     | expr . OR expr

    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120

    $default  reduce using rule 53 (expr)

    Conflict between rule 53 and token AND resolved as reduce (AND < '-').
    Conflict between rule 53 and token OR resolved as reduce (OR < '-').
    Conflict between rule 53 and token EE resolved as reduce (EE < '-').
    Conflict between rule 53 and token NE resolved as reduce (NE < '-').
    Conflict between rule 53 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 53 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 53 and token LE resolved as reduce (LE < '-').
    Conflict between rule 53 and token GE resolved as reduce (GE < '-').
    Conflict between rule 53 and token '+' resolved as reduce (%left '+').
    Conflict between rule 53 and token '-' resolved as reduce (%left '-').
    Conflict between rule 53 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 53 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 53 and token '%' resolved as shift ('-' < '%').


State 147

   49 expr: expr . '*' expr
   49     | expr '*' expr .  [AND, OR, EE, NE, '<', '>', LE, GE, '+', '-', '*', '/', '%', ')', ']', '{', ',', ';']
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . LE expr
   57     | expr . GE expr
   58     | expr . EE expr
   59     | expr . NE expr
   60     | expr . AND expr
   61     | expr . OR expr

    $default  reduce using rule 49 (expr)

    Conflict between rule 49 and token AND resolved as reduce (AND < '*').
    Conflict between rule 49 and token OR resolved as reduce (OR < '*').
    Conflict between rule 49 and token EE resolved as reduce (EE < '*').
    Conflict between rule 49 and token NE resolved as reduce (NE < '*').
    Conflict between rule 49 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 49 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 49 and token LE resolved as reduce (LE < '*').
    Conflict between rule 49 and token GE resolved as reduce (GE < '*').
    Conflict between rule 49 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 49 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 49 and token '*' resolved as reduce (%left '*').
    Conflict between rule 49 and token '/' resolved as reduce (%left '/').
    Conflict between rule 49 and token '%' resolved as reduce (%left '%').


State 148

   49 expr: expr . '*' expr
   50     | expr . '/' expr
   50     | expr '/' expr .  [AND, OR, EE, NE, '<', '>', LE, GE, '+', '-', '*', '/', '%', ')', ']', '{', ',', ';']
   51     | expr . '%' expr
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . LE expr
   57     | expr . GE expr
   58     | expr . EE expr
   59     | expr . NE expr
   60     | expr . AND expr
   61     | expr . OR expr

    $default  reduce using rule 50 (expr)

    Conflict between rule 50 and token AND resolved as reduce (AND < '/').
    Conflict between rule 50 and token OR resolved as reduce (OR < '/').
    Conflict between rule 50 and token EE resolved as reduce (EE < '/').
    Conflict between rule 50 and token NE resolved as reduce (NE < '/').
    Conflict between rule 50 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 50 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 50 and token LE resolved as reduce (LE < '/').
    Conflict between rule 50 and token GE resolved as reduce (GE < '/').
    Conflict between rule 50 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 50 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 50 and token '*' resolved as reduce (%left '*').
    Conflict between rule 50 and token '/' resolved as reduce (%left '/').
    Conflict between rule 50 and token '%' resolved as reduce (%left '%').


State 149

   49 expr: expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   51     | expr '%' expr .  [AND, OR, EE, NE, '<', '>', LE, GE, '+', '-', '*', '/', '%', ')', ']', '{', ',', ';']
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . LE expr
   57     | expr . GE expr
   58     | expr . EE expr
   59     | expr . NE expr
   60     | expr . AND expr
   61     | expr . OR expr

    $default  reduce using rule 51 (expr)

    Conflict between rule 51 and token AND resolved as reduce (AND < '%').
    Conflict between rule 51 and token OR resolved as reduce (OR < '%').
    Conflict between rule 51 and token EE resolved as reduce (EE < '%').
    Conflict between rule 51 and token NE resolved as reduce (NE < '%').
    Conflict between rule 51 and token '<' resolved as reduce ('<' < '%').
    Conflict between rule 51 and token '>' resolved as reduce ('>' < '%').
    Conflict between rule 51 and token LE resolved as reduce (LE < '%').
    Conflict between rule 51 and token GE resolved as reduce (GE < '%').
    Conflict between rule 51 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 51 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 51 and token '*' resolved as reduce (%left '*').
    Conflict between rule 51 and token '/' resolved as reduce (%left '/').
    Conflict between rule 51 and token '%' resolved as reduce (%left '%').


State 150

   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   73 arguments: . expr
   74          | . expr ',' arguments
   74          | expr ',' . arguments
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr        go to state 123
    location    go to state 83
    methodcall  go to state 84
    arguments   go to state 163
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 151

   66 methodcall: ID '(' arguments ')' .

    $default  reduce using rule 66 (methodcall)


State 152

   64 location: ID '[' expr ']' .

    $default  reduce using rule 64 (location)


State 153

   27 blockVars: blockVars ',' ID .

    $default  reduce using rule 27 (blockVars)


State 154

   25 varDecl: type blockVars ';' varDecl .

    $default  reduce using rule 25 (varDecl)


State 155

   28 statementContents: location '=' expr ';' .

    $default  reduce using rule 28 (statementContents)


State 156

   29 statementContents: location PLUSEQ expr ';' .

    $default  reduce using rule 29 (statementContents)


State 157

   30 statementContents: location MINUSEQ expr ';' .

    $default  reduce using rule 30 (statementContents)


State 158

   49 expr: expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . LE expr
   57     | expr . GE expr
   58     | expr . EE expr
   59     | expr . NE expr
   60     | expr . AND expr
   61     | expr . OR expr
   69 calloutArgsList: expr .  [')']
   71                | expr . ',' calloutArgsList

    AND  shift, and go to state 108
    OR   shift, and go to state 109
    EE   shift, and go to state 110
    NE   shift, and go to state 111
    '<'  shift, and go to state 112
    '>'  shift, and go to state 113
    LE   shift, and go to state 114
    GE   shift, and go to state 115
    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120
    ','  shift, and go to state 164

    $default  reduce using rule 69 (calloutArgsList)


State 159

   67 methodcall: CALLOUT '(' stringlit ',' calloutArgsList . ')'

    ')'  shift, and go to state 165


State 160

   70 calloutArgsList: stringlit .  [')']
   72                | stringlit . ',' calloutArgsList
   77 literal: stringlit .  [AND, OR, EE, NE, '<', '>', LE, GE, '+', '-', '*', '/', '%', ')', ',']

    ','  shift, and go to state 166

    ')'       reduce using rule 70 (calloutArgsList)
    ')'       [reduce using rule 77 (literal)]
    ','       [reduce using rule 77 (literal)]
    $default  reduce using rule 77 (literal)


State 161

   34 statementContents: FOR ID '=' expr ',' . expr block
   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr        go to state 167
    location    go to state 83
    methodcall  go to state 84
    literal     go to state 85
    intlit      go to state 86
    boollit     go to state 87
    stringlit   go to state 88


State 162

   32 statementContents: IF '(' expr ')' block .  [BREAK, CALLOUT, CONTINUE, FOR, IF, RETURN, ID, '{', '}']
   33                  | IF '(' expr ')' block . ELSE block

    ELSE  shift, and go to state 168

    $default  reduce using rule 32 (statementContents)


State 163

   74 arguments: expr ',' arguments .

    $default  reduce using rule 74 (arguments)


State 164

   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   69 calloutArgsList: . expr
   70                | . stringlit
   71                | . expr ',' calloutArgsList
   71                | expr ',' . calloutArgsList
   72                | . stringlit ',' calloutArgsList
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr             go to state 158
    location         go to state 83
    methodcall       go to state 84
    calloutArgsList  go to state 169
    literal          go to state 85
    intlit           go to state 86
    boollit          go to state 87
    stringlit        go to state 160


State 165

   67 methodcall: CALLOUT '(' stringlit ',' calloutArgsList ')' .

    $default  reduce using rule 67 (methodcall)


State 166

   44 expr: . location
   45     | . methodcall
   46     | . literal
   47     | . '-' expr
   48     | . '!' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr '+' expr
   53     | . expr '-' expr
   54     | . expr '<' expr
   55     | . expr '>' expr
   56     | . expr LE expr
   57     | . expr GE expr
   58     | . expr EE expr
   59     | . expr NE expr
   60     | . expr AND expr
   61     | . expr OR expr
   62     | . '(' expr ')'
   63 location: . ID
   64         | . ID '[' expr ']'
   65 methodcall: . ID '(' ')'
   66           | . ID '(' arguments ')'
   67           | . CALLOUT '(' stringlit ',' calloutArgsList ')'
   68           | . CALLOUT '(' stringlit ')'
   69 calloutArgsList: . expr
   70                | . stringlit
   71                | . expr ',' calloutArgsList
   72                | . stringlit ',' calloutArgsList
   72                | stringlit ',' . calloutArgsList
   75 literal: . intlit
   76        | . boollit
   77        | . stringlit
   78 intlit: . DECLIT
   79       | . HEXLIT
   80 boollit: . TRUE
   81        | . FALSE
   82 stringlit: . STRINGLIT

    CALLOUT    shift, and go to state 52
    FALSE      shift, and go to state 75
    TRUE       shift, and go to state 76
    '-'        shift, and go to state 77
    '!'        shift, and go to state 78
    STRINGLIT  shift, and go to state 79
    DECLIT     shift, and go to state 38
    HEXLIT     shift, and go to state 39
    ID         shift, and go to state 57
    '('        shift, and go to state 80

    expr             go to state 158
    location         go to state 83
    methodcall       go to state 84
    calloutArgsList  go to state 170
    literal          go to state 85
    intlit           go to state 86
    boollit          go to state 87
    stringlit        go to state 160


State 167

   20 block: . '{' '}'
   21      | . '{' varDecl '}'
   22      | . '{' statement '}'
   23      | . '{' varDecl statement '}'
   34 statementContents: FOR ID '=' expr ',' expr . block
   49 expr: expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . LE expr
   57     | expr . GE expr
   58     | expr . EE expr
   59     | expr . NE expr
   60     | expr . AND expr
   61     | expr . OR expr

    AND  shift, and go to state 108
    OR   shift, and go to state 109
    EE   shift, and go to state 110
    NE   shift, and go to state 111
    '<'  shift, and go to state 112
    '>'  shift, and go to state 113
    LE   shift, and go to state 114
    GE   shift, and go to state 115
    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120
    '{'  shift, and go to state 43

    block  go to state 171


State 168

   20 block: . '{' '}'
   21      | . '{' varDecl '}'
   22      | . '{' statement '}'
   23      | . '{' varDecl statement '}'
   33 statementContents: IF '(' expr ')' block ELSE . block

    '{'  shift, and go to state 43

    block  go to state 172


State 169

   71 calloutArgsList: expr ',' calloutArgsList .

    $default  reduce using rule 71 (calloutArgsList)


State 170

   72 calloutArgsList: stringlit ',' calloutArgsList .

    $default  reduce using rule 72 (calloutArgsList)


State 171

   34 statementContents: FOR ID '=' expr ',' expr block .

    $default  reduce using rule 34 (statementContents)


State 172

   33 statementContents: IF '(' expr ')' block ELSE block .

    $default  reduce using rule 33 (statementContents)
